/**
 * We export here two datasets, useful to test and play with o-spreadsheet:
 *
 * - a demo dataset (demoData)
 * . a perf focused dataset (created by function makeLargeDataset)
 */

export const demoData = {
  version: 25,
  sheets: [
    {
      id: "sh1",
      name: "Sheet1",
      colNumber: 26,
      rowNumber: 120,
      rows: {},
      cols: {},
      merges: ["H2:I5", "K3:K8"],
      cells: {
        A21: "[Sheet2 => B2:](o-spreadsheet://sh2)",
        A23: "https://odoo.com",
        A27: "Emily Anderson (Emmy)",
        A28: "Sophie Allen (Saffi)",
        A29: "Chloe Adams",
        A30: "Megan Alexander (Meg)",
        A31: "Lucy Arnold (Lulu)",
        A32: "Hannah Alvarez",
        A33: "Jessica Alcock (Jess)",
        A34: "Charlotte Anaya",
        A35: "Lauren Anthony",
        B2: "[Owl is awesome](https://github.com/odoo/owl)",
        B4: "Numbers",
        B9: "Formulas",
        B14: "Errors",
        B21: "=Charts!B2",
        B26: "first dataset",
        B27: "12",
        B28: "=floor(RAND()*50)",
        B29: "=floor(RAND()*50)",
        B30: "=floor(RAND()*50)",
        B31: "=floor(RAND()*50)",
        B32: "=floor(RAND()*50)",
        B33: "=floor(RAND()*50)",
        B34: "19",
        B35: "=floor(RAND()*50)",
        C1: "CF =42",
        C4: "12.4",
        C5: "42",
        C7: "3",
        C9: "= SUM( C4:C5 )",
        C10: "=SUM(C4:C7)",
        C11: "=-(3 + C7 *SUM(C4:C7))",
        C12: "=SUM(C9:C11)",
        C14: "=C14",
        C15: "=(+",
        C16: "=C15",
        C17: "=(+)",
        C18: "=C1{C2",
        C22: "0.43",
        C23: "10",
        C24: "10.123",
        C26: "second dataset",
        C27: "=floor(RAND()*50)",
        C28: "=floor(RAND()*50)",
        C29: "=floor(RAND()*50)",
        C30: "=floor(RAND()*50)",
        C31: "=floor(RAND()*50)",
        C32: "=floor(RAND()*50)",
        C33: "=floor(RAND()*50)",
        C34: "=floor(RAND()*50)",
        C35: "=floor(RAND()*50)",
        D10: "note that C7 is empty",
        D12: "this is a sum of sums",
        F2: "italic blablah",
        F3: "strikethrough",
        F4: "underline",
        G1: "CF color scale:",
        G2: "5",
        G3: "8",
        G4: "9",
        G5: "15",
        G6: "22",
        G8: "30",
        G13: "=A1+A2+A3+A4+A5+A6+A7+A8+A9+A10+A11+A12+A13+A14+A15+A16+A17+A18",
        H2: "merged content",
        H22: "Col 1",
        H23: "0",
        H24: "1",
        H25: "2",
        H26: "3",
        H27: "4",
        H28: "5",
        H29: "6",
        H30: "7",
        H31: "8",
        H32: "9",
        H33: "10",
        I22: "Col 2",
        I23: "0",
        I24: "1",
        I25: "2",
        I26: "3",
        I27: "4",
        I28: "5",
        I29: "4",
        I30: "3",
        I31: "2",
        I32: "1",
        I33: "0",
      },
      styles: {
        B2: 1,
        B4: 2,
        B9: 3,
        B14: 4,
        F2: 5,
        F3: 6,
        F4: 7,
      },
      formats: {
        C22: 1,
        "C23:C24": 2,
      },
      borders: {},
      conditionalFormats: [
        {
          id: "1",
          ranges: ["C1:C100"],
          rule: {
            values: ["42"],
            operator: "Equal",
            type: "CellIsRule",
            style: {
              fillColor: "#FF9900",
            },
          },
        },
        {
          id: "2",
          ranges: ["G1:G100"],
          rule: {
            type: "ColorScaleRule",
            minimum: {
              type: "value",
              color: 16777215,
            },
            maximum: {
              type: "value",
              color: 16711680,
            },
          },
        },
        {
          id: "3",
          ranges: ["H23:H33"],
          rule: {
            type: "IconSetRule",
            upperInflectionPoint: {
              type: "percentage",
              value: "66",
              operator: "gt",
            },
            lowerInflectionPoint: {
              type: "percentage",
              value: "33",
              operator: "gt",
            },
            icons: {
              upper: "arrowGood",
              middle: "dotNeutral",
              lower: "arrowBad",
            },
          },
        },
        {
          id: "4",
          ranges: ["I23:I33"],
          rule: {
            type: "IconSetRule",
            upperInflectionPoint: {
              type: "number",
              value: "4",
              operator: "ge",
            },
            lowerInflectionPoint: {
              type: "number",
              value: "2",
              operator: "ge",
            },
            icons: {
              upper: "smileyGood",
              middle: "smileyNeutral",
              lower: "smileyBad",
            },
          },
        },
      ],
      dataValidationRules: [],
      figures: [],
      tables: [
        {
          range: "H22:I33",
          type: "static",
          config: {
            hasFilters: true,
            totalRow: false,
            firstColumn: false,
            lastColumn: false,
            numberOfHeaders: 1,
            bandedRows: false,
            bandedColumns: false,
            styleId: "TableStyleLight11",
          },
        },
      ],
      areGridLinesVisible: true,
      isVisible: true,
      headerGroups: {
        ROW: [],
        COL: [],
      },
    },
    {
      id: "sh2",
      name: "Charts",
      colNumber: 26,
      rowNumber: 174,
      rows: {},
      cols: { 22: { size: 166 } },
      merges: [],
      cells: {
        B2: "42",
        R1: "Country",
        R2: "Afghanistan",
        R3: "Albania",
        R4: "Algeria",
        R5: "Angola",
        R6: "Argentina",
        R7: "Armenia",
        R8: "Australia",
        R9: "Austria",
        R10: "Azerbaijan",
        R11: "Bahamas",
        R12: "Bangladesh",
        R13: "Belarus",
        R14: "Belgium",
        R15: "Belize",
        R16: "Benin",
        R17: "Bhutan",
        R18: "Bolivia",
        R19: "Bosnia And Herz.",
        R20: "Botswana",
        R21: "Brazil",
        R22: "Brunei",
        R23: "Bulgaria",
        R24: "Burkina Faso",
        R25: "Burundi",
        R26: "Cambodia",
        R27: "Cameroon",
        R28: "Canada",
        R29: "Central African Rep.",
        R30: "Chad",
        R31: "Chile",
        R32: "China",
        R33: "Colombia",
        R34: "Congo",
        R35: "Costa Rica",
        R36: "CÃ´te D'ivoire",
        R37: "Croatia",
        R38: "Cuba",
        R39: "Cyprus",
        R40: "Czechia",
        R41: "Dem. Rep. Congo",
        R42: "Denmark",
        R43: "Djibouti",
        R44: "Dominican Rep.",
        R45: "Ecuador",
        R46: "Egypt",
        R47: "El Salvador",
        R48: "Eq. Guinea",
        R49: "Eritrea",
        R50: "Estonia",
        R51: "Eswatini",
        R52: "Ethiopia",
        R53: "Falkland Is.",
        R54: "Fiji",
        R55: "Finland",
        R56: "France",
        R57: "Gabon",
        R58: "Gambia",
        R59: "Georgia",
        R60: "Germany",
        R61: "Ghana",
        R62: "Greece",
        R63: "Greenland",
        R64: "Guatemala",
        R65: "Guinea",
        R66: "Guinea-bissau",
        R67: "Guyana",
        R68: "Haiti",
        R69: "Honduras",
        R70: "Hungary",
        R71: "Iceland",
        R72: "India",
        R73: "Indonesia",
        R74: "Iran",
        R75: "Iraq",
        R76: "Ireland",
        R77: "Israel",
        R78: "Italy",
        R79: "Jamaica",
        R80: "Japan",
        R81: "Jordan",
        R82: "Kazakhstan",
        R83: "Kenya",
        R84: "Kosovo",
        R85: "Kuwait",
        R86: "Kyrgyzstan",
        R87: "Laos",
        R88: "Latvia",
        R89: "Lebanon",
        R90: "Lesotho",
        R91: "Liberia",
        R92: "Libya",
        R93: "Lithuania",
        R94: "Luxembourg",
        R95: "Madagascar",
        R96: "Malawi",
        R97: "Malaysia",
        R98: "Mali",
        R99: "Mauritania",
        R100: "Mexico",
        R101: "Moldova",
        R102: "Mongolia",
        R103: "Montenegro",
        R104: "Morocco",
        R105: "Mozambique",
        R106: "Myanmar",
        R107: "Namibia",
        R108: "Nepal",
        R109: "Netherlands",
        R110: "New Caledonia",
        R111: "New Zealand",
        R112: "Nicaragua",
        R113: "Niger",
        R114: "Nigeria",
        R115: "North Korea",
        R116: "North Macedonia",
        R117: "Norway",
        R118: "Oman",
        R119: "Pakistan",
        R120: "Palestine",
        R121: "Panama",
        R122: "Papua New Guinea",
        R123: "Paraguay",
        R124: "Peru",
        R125: "Philippines",
        R126: "Poland",
        R127: "Portugal",
        R128: "Puerto Rico",
        R129: "Qatar",
        R130: "Romania",
        R131: "Russia",
        R132: "Rwanda",
        R133: "S. Sudan",
        R134: "Saudi Arabia",
        R135: "Senegal",
        R136: "Serbia",
        R137: "Sierra Leone",
        R138: "Slovakia",
        R139: "Slovenia",
        R140: "Solomon Is.",
        R141: "Somalia",
        R142: "South Africa",
        R143: "South Korea",
        R144: "Spain",
        R145: "Sri Lanka",
        R146: "Sudan",
        R147: "Suriname",
        R148: "Sweden",
        R149: "Switzerland",
        R150: "Syria",
        R151: "Taiwan",
        R152: "Tajikistan",
        R153: "Tanzania",
        R154: "Thailand",
        R155: "Timor-leste",
        R156: "Togo",
        R157: "Trinidad And Tobago",
        R158: "Tunisia",
        R159: "Turkey",
        R160: "Turkmenistan",
        R161: "Uganda",
        R162: "Ukraine",
        R163: "United Arab Emirates",
        R164: "United Kingdom",
        R165: "United States Of America",
        R166: "Uruguay",
        R167: "Uzbekistan",
        R168: "Vanuatu",
        R169: "Venezuela",
        R170: "Vietnam",
        R171: "W. Sahara",
        R172: "Yemen",
        R173: "Zambia",
        R174: "Zimbabwe",
        S1: "Value",
        S2: "=ROUND(RANDARRAY(ROWS(R2:R174) -1)*1000)",
        V27: "Stage",
        V28: "Lead",
        V29: "Opportunity",
        V30: "Qualified",
        V31: "Proposition",
        V32: "Won",
        W27: "Count",
        W28: "=RANDBETWEEN(10, 40)",
        W29: "=RANDBETWEEN(10, 40)",
        W30: "=RANDBETWEEN(10, 40)",
        W31: "=RANDBETWEEN(10, 40)",
        W32: "=RANDBETWEEN(10, 40)",
        V1: "Movie Genre",
        V2: "Action",
        V3: "Action",
        V4: "Action",
        V5: "Action",
        V6: "Action",
        V7: "Animation",
        V8: "Animation",
        V9: "Animation",
        V10: "Animation",
        V11: "Animation",
        V12: "Drama",
        V13: "Drama",
        V14: "Drama",
        V15: "Drama",
        V16: "Drama",
        V17: "Action",
        V18: "Animation",
        V19: "Drama",
        V20: "Action",
        V21: "Animation",
        V22: "Misc",
        V23: "Misc",
        W1: "Movie Name",
        W2: "Avengers: Endgame",
        W3: "The Dark Knight",
        W4: "Jurassic World",
        W5: "Fast & Furious 7",
        W6: "Spider-Man: No Way Home",
        W7: "Frozen II",
        W8: "Minions",
        W9: "Toy Story 4",
        W10: "The Lion King (2019)",
        W11: "Despicable Me 3",
        W12: "Titanic",
        W13: "Joker",
        W14: "Forrest Gump",
        W15: "Bohemian Rhapsody",
        W16: "The Revenant",
        W17: "Black Panther",
        W18: "Shrek 2",
        W19: "Interstellar",
        W20: "Iron Man 3",
        W21: "Coco",
        X1: "Revenue",
        X2: "2798000000",
        X3: "1006000000",
        X4: "1671000000",
        X5: "1516000000",
        X6: "1921000000",
        X7: "1450000000",
        X8: "1159000000",
        X9: "1073000000",
        X10: "1657000000",
        X11: "1035000000",
        X12: "2201000000",
        X13: "1074000000",
        X14: "678200000",
        X15: "910000000",
        X16: "533000000",
        X17: "1347000000",
        X18: "935300000",
        X19: "701800000",
        X20: "1215000000",
        X21: "807800000",
        X22: "3215000000",
        X23: "1212000000",
      },
      styles: {},
      formats: {
        "X1:X23": 7,
      },
      borders: {},
      conditionalFormats: [],
      dataValidationRules: [],
      figures: [
        {
          id: "1",
          tag: "chart",
          width: 400,
          height: 300,
          x: 100,
          y: 100,
          data: {
            type: "line",
            dataSetsHaveTitle: true,
            background: "#FFFFFF",
            dataSets: [
              {
                dataRange: "Sheet1!B26:B35",
              },
              {
                dataRange: "Sheet1!C26:C35",
              },
            ],
            legendPosition: "top",
            labelRange: "Sheet1!A27:A35",
            title: {
              text: "Line",
            },
            stacked: false,
          },
        },
        {
          id: "2",
          tag: "chart",
          width: 400,
          height: 300,
          x: 600,
          y: 100,
          data: {
            type: "bar",
            dataSetsHaveTitle: false,
            background: "#FFFFFF",
            dataSets: [
              {
                dataRange: "Sheet1!B27:B35",
              },
              {
                dataRange: "Sheet1!C27:C35",
              },
            ],
            legendPosition: "top",
            labelRange: "Sheet1!A27:A35",
            title: {
              text: "Bar",
            },
            stacked: false,
          },
        },
        {
          id: "3",
          tag: "chart",
          width: 900,
          height: 400,
          x: 100,
          y: 420,
          data: {
            type: "pie",
            dataSetsHaveTitle: true,
            background: "#FFFFFF",
            dataSets: [
              {
                dataRange: "Sheet1!B26:B35",
              },
              {
                dataRange: "Sheet1!C26:C35",
              },
            ],
            legendPosition: "top",
            labelRange: "Sheet1!A27:A35",
            title: {
              text: "Pie",
            },
          },
        },
        {
          id: "4",
          x: 1015,
          y: 102,
          height: 296,
          width: 465,
          tag: "chart",
          data: {
            baselineColorDown: "#EA6175",
            baselineColorUp: "#43C5B1",
            baselineMode: "absolute",
            title: {
              text: "Scorecard",
            },
            type: "scorecard",
            background: "#FFFFFF",
            baseline: "Sheet1!B28",
            baselineDescr: "Descr",
            keyValue: "Sheet1!B29",
            humanize: false,
          },
        },
        {
          id: "5",
          x: 1015,
          y: 420,
          height: 400,
          width: 465,
          tag: "chart",
          data: {
            background: "#FFFFFF",
            sectionRule: {
              colors: {
                lowerColor: "#cc0000",
                middleColor: "#f1c232",
                upperColor: "#6aa84f",
              },
              rangeMin: "0",
              rangeMax: "100",
              lowerInflectionPoint: {
                type: "percentage",
                value: "15",
                operator: "<=",
              },
              upperInflectionPoint: {
                type: "percentage",
                value: "40",
                operator: "<=",
              },
            },
            title: {
              text: "Gauge",
            },
            type: "gauge",
            dataRange: "Sheet1!B29",
          },
        },
        {
          id: "6",
          tag: "chart",
          width: 500,
          height: 300,
          x: 100,
          y: 850,
          data: {
            type: "scatter",
            dataSetsHaveTitle: true,
            background: "#FFFFFF",
            dataSets: [
              {
                dataRange: "Sheet1!C26:C35",
              },
            ],
            legendPosition: "top",
            labelRange: "Sheet1!B27:B35",
            title: {
              text: "Scatter",
            },
          },
        },
        {
          id: "7",
          x: 619,
          y: 850,
          width: 500,
          height: 300,
          tag: "chart",
          data: {
            type: "combo",
            dataSetsHaveTitle: true,
            background: "#FFFFFF",
            dataSets: [
              {
                dataRange: "Sheet1!B26:B35",
                type: "bar",
              },
              {
                dataRange: "Sheet1!C26:C35",
                type: "line",
              },
            ],
            legendPosition: "top",
            labelRange: "Sheet1!A27:A35",
            title: {
              text: "Combo",
            },
            aggregated: false,
          },
        },
        {
          id: "8",
          x: 1138,
          y: 850,
          width: 500,
          height: 300,
          tag: "chart",
          data: {
            type: "waterfall",
            dataSetsHaveTitle: true,
            background: "#FFFFFF",
            dataSets: [
              {
                dataRange: "Sheet1!B26:B29",
              },
              {
                dataRange: "Sheet1!C26:C29",
              },
            ],
            legendPosition: "top",
            verticalAxisPosition: "left",
            labelRange: "Sheet1!A26:A29",
            title: {
              text: "Waterfall",
            },
            aggregated: false,
            showSubTotals: true,
            showConnectorLines: true,
          },
        },
        {
          id: "9",
          x: 950,
          y: 1175,
          height: 300,
          width: 500,
          tag: "chart",
          data: {
            type: "radar",
            dataSetsHaveTitle: true,
            background: "#FFFFFF",
            dataSets: [
              {
                dataRange: "Sheet1!B26:B35",
              },
              {
                dataRange: "Sheet1!C26:C35",
              },
            ],
            legendPosition: "top",
            labelRange: "Sheet1!A27:A35",
            title: {
              text: "Radar",
            },
            aggregated: false,
          },
        },
        {
          id: "10",
          x: 100,
          y: 1175,
          width: 800,
          height: 600,
          tag: "chart",
          data: {
            type: "geo",
            dataSetsHaveTitle: true,
            background: "#FFFFFF",
            dataSets: [
              {
                dataRange: "S:S",
              },
            ],
            legendPosition: "left",
            labelRange: "R:R",
            title: {
              text: "Geo",
            },
            region: "world",
          },
        },
        {
          id: "11",
          x: 100,
          y: 1800,
          width: 400,
          height: 400,
          tag: "chart",
          data: {
            type: "sunburst",
            dataSetsHaveTitle: true,
            dataSets: [
              {
                dataRange: "V1:V23",
              },
              {
                dataRange: "W1:W23",
              },
            ],
            legendPosition: "top",
            labelRange: "X1:X23",
            title: { text: "Movie Revenue by Genre" },
          },
        },
        {
          id: "12",
          x: 950,
          y: 1500,
          height: 275,
          width: 500,
          tag: "chart",
          data: {
            type: "funnel",
            dataSetsHaveTitle: true,
            background: "#FFFFFF",
            dataSets: [{ dataRange: "W27:W32" }],
            legendPosition: "none",
            labelRange: "V27:V32",
            title: { text: "Funnel" },
            aggregated: false,
            cumulative: true,
          },
        },
        {
          id: "13",
          x: 550,
          y: 1800,
          height: 400,
          width: 900,
          tag: "chart",
          data: {
            type: "treemap",
            dataSetsHaveTitle: true,
            dataSets: [
              {
                dataRange: "V1:V23",
              },
              {
                dataRange: "W1:W23",
              },
            ],
            legendPosition: "top",
            labelRange: "X1:X23",
            title: { text: "Movie Revenue by Genre" },
          },
        },
        {
          id: "14",
          tag: "chart",
          width: 400,
          height: 300,
          x: 100,
          y: 2225,
          data: {
            type: "pyramid",
            dataSetsHaveTitle: true,
            background: "#FFFFFF",
            dataSets: [
              {
                dataRange: "Sheet1!B26:B35",
              },
              {
                dataRange: "Sheet1!C26:C35",
              },
            ],
            legendPosition: "top",
            labelRange: "Sheet1!A27:A35",
            title: {
              text: "Line",
            },
            stacked: false,
          },
        },
      ],
      tables: [
        {
          range: "R1:S174",
          type: "static",
          config: {
            hasFilters: false,
            totalRow: false,
            firstColumn: true,
            lastColumn: false,
            numberOfHeaders: 1,
            bandedRows: true,
            bandedColumns: false,
            automaticAutofill: true,
            styleId: "TableStyleMedium7",
          },
        },
        {
          range: "V1:X23",
          type: "static",
          config: {
            hasFilters: false,
            totalRow: false,
            firstColumn: true,
            lastColumn: false,
            numberOfHeaders: 1,
            bandedRows: true,
            bandedColumns: false,
            automaticAutofill: true,
            styleId: "TableStyleMedium3",
          },
        },
        {
          range: "V27:W32",
          type: "static",
          config: {
            hasFilters: false,
            totalRow: false,
            firstColumn: true,
            lastColumn: false,
            numberOfHeaders: 1,
            bandedRows: true,
            bandedColumns: false,
            automaticAutofill: true,
            styleId: "TableStyleMedium5",
          },
        },
      ],
      areGridLinesVisible: true,
      isVisible: true,
      headerGroups: {
        ROW: [],
        COL: [],
      },
    },
    {
      id: "sh3",
      name: "Split Panes",
      colNumber: 41,
      rowNumber: 60,
      rows: {},
      cols: {
        0: {
          size: 61,
        },
        1: {
          size: 97,
        },
        2: {
          size: 25,
        },
        3: {
          size: 25,
        },
        4: {
          size: 25,
        },
        5: {
          size: 25,
        },
        6: {
          size: 25,
        },
        7: {
          size: 25,
        },
        8: {
          size: 25,
        },
        9: {
          size: 25,
        },
        10: {
          size: 25,
        },
        11: {
          size: 25,
        },
        12: {
          size: 25,
        },
        13: {
          size: 25,
        },
        14: {
          size: 25,
        },
        15: {
          size: 25,
        },
        16: {
          size: 25,
        },
      },
      merges: [],
      cells: {
        B1: "won't scroll",
        B7: "scroll vertically",
        D2: "scroll horizontally",
      },
      styles: {
        "D6:D17": 8,
        "E6:E9": 8,
        "E14:E17": 8,
        "F6:F8": 8,
        "F15:F17": 8,
        "G6:G7": 8,
        "G16:G17": 8,
        "H6:L6": 8,
        "H17:L17": 8,
        "M6:M7": 8,
        "M16:M17": 8,
        "N6:N8": 8,
        "N15:N17": 8,
        "O6:O9": 8,
        "O14:O17": 8,
        "P6:P17": 8,
        "H8:H10": 9,
        "I7:I11": 9,
        "J7:J8": 9,
        "J10:J11": 9,
        J14: 9,
        "K7:K11": 9,
        "L7:L12": 9,
        L16: 9,
        "M8:M15": 9,
        "N9:N14": 9,
        "O10:O13": 9,
      },
      formats: {},
      borders: {},
      conditionalFormats: [
        {
          id: "1AAAB",
          ranges: ["A1:AO4", "A5:B60"],
          rule: {
            values: [],
            operator: "IsEmpty",
            type: "CellIsRule",
            style: {
              fillColor: "#B6D7A8",
            },
          },
        },
      ],
      dataValidationRules: [],
      figures: [],
      tables: [],
      areGridLinesVisible: true,
      isVisible: true,
      panes: {
        xSplit: 2,
        ySplit: 4,
      },
      headerGroups: {
        ROW: [],
        COL: [],
      },
    },
    {
      id: "sh4",
      name: "Excel Formulas",
      colNumber: 26,
      rowNumber: 224,
      rows: {},
      cols: {},
      merges: [],
      cells: {
        A1: "formulas",
        A2: "ABS",
        A3: "ACOS",
        A4: "ACOSH",
        A5: "ACOT",
        A6: "ACOTH",
        A7: "AND",
        A8: "ASIN",
        A9: "ASINH",
        A10: "ATAN",
        A11: "ATAN2",
        A12: "ATANH",
        A13: "AVEDEV",
        A14: "AVERAGE",
        A15: "AVERAGEA",
        A16: "AVERAGEIF",
        A17: "AVERAGEIFS",
        A18: "CEILING",
        A19: "CEILING.MATH",
        A20: "CEILING.PRECISE",
        A21: "CHAR",
        A22: "COLUMN",
        A23: "COLUMNS",
        A24: "CONCAT",
        A25: "CONCATENATE",
        A26: "COS",
        A27: "COSH",
        A28: "COT",
        A29: "COTH",
        A30: "COUNT",
        A31: "COUNTA",
        A32: "COUNTBLANK",
        A33: "COUNTIF",
        A34: "COUNTIFS",
        A35: "COVAR",
        A36: "COVARIANCE.P",
        A37: "COVARIANCE.S",
        A38: "CSC",
        A39: "CSCH",
        A40: "DATE",
        A41: "DATEVALUE",
        A42: "DAVERAGE",
        A43: "DAY",
        A44: "DAYS",
        A45: "DCOUNT",
        A46: "DCOUNTA",
        A47: "DECIMAL",
        A48: "DEGREES",
        A49: "DGET",
        A50: "DMAX",
        A51: "DMIN",
        A52: "DPRODUCT",
        A53: "DSTDEV",
        A54: "DSTDEVP",
        A55: "DSUM",
        A56: "DVAR",
        A57: "DVARP",
        A58: "EDATE",
        A59: "EOMONTH",
        A60: "EXACT",
        A61: "EXP",
        A62: "FIND",
        A63: "FLOOR",
        A64: "FLOOR.MATH",
        A65: "FLOOR.PRECISE",
        A66: "HLOOKUP",
        A67: "HOUR",
        A68: "IF",
        A69: "IFERROR",
        A70: "IFS",
        A71: "ISERROR",
        A72: "ISEVEN",
        A73: "ISLOGICAL",
        A74: "ISNONTEXT",
        A75: "ISNUMBER",
        A76: "ISO.CEILING",
        A77: "ISODD",
        A78: "ISOWEEKNUM",
        A79: "ISTEXT",
        A80: "LARGE",
        A81: "LEFT",
        A82: "LEN",
        A83: "LN",
        A84: "LOOKUP",
        A85: "LOWER",
        A86: "MATCH",
        A87: "MAX",
        A88: "MAXA",
        A89: "MAXIFS",
        A90: "MEDIAN",
        A91: "MIN",
        A92: "MINA",
        A93: "MINIFS",
        A94: "MINUTE",
        A95: "MOD",
        A96: "MONTH",
        A97: "NETWORKDAYS",
        A98: "NETWORKDAYS.INTL",
        A99: "NOT",
        A100: "NOW",
        A101: "ODD",
        A102: "OR",
        A103: "PERCENTILE",
        A104: "PERCENTILE.EXC",
        A105: "PERCENTILE.INC",
        A106: "PI",
        A107: "POWER",
        A108: "PRODUCT",
        A109: "QUARTILE",
        A110: "QUARTILE.EXC",
        A111: "QUARTILE.INC",
        A112: "RAND",
        A113: "RANDBETWEEN",
        A114: "REPLACE",
        A115: "RIGHT",
        A116: "ROUND",
        A117: "ROUNDDOWN",
        A118: "ROUNDUP",
        A119: "ROW",
        A120: "ROWS",
        A121: "SEARCH",
        A122: "SEC",
        A123: "SECH",
        A124: "SECOND",
        A125: "SIN",
        A126: "SINH",
        A127: "SMALL",
        A128: "SQRT",
        A129: "STDEV",
        A130: "STDEV.P",
        A131: "STDEV.S",
        A132: "STDEVA",
        A133: "STDEVP",
        A134: "STDEVPA",
        A135: "SUBSTITUTE",
        A136: "SUM",
        A137: "SUMIF",
        A138: "SUMIFS",
        A139: "TAN",
        A140: "TANH",
        A141: "TEXTJOIN",
        A142: "TIME",
        A143: "TIMEVALUE",
        A144: "TODAY",
        A145: "TRIM",
        A146: "TRUNC",
        A147: "UPPER",
        A148: "VAR",
        A149: "VAR.P",
        A150: "VAR.S",
        A151: "VARA",
        A152: "VARP",
        A153: "VARPA",
        A154: "VLOOKUP",
        A155: "WEEKDAY",
        A156: "WEEKNUM",
        A157: "WORKDAY",
        A158: "WORKDAY.INTL",
        A159: "XOR",
        A160: "YEAR",
        A161: "DELTA",
        A162: "NA",
        A163: "ISNA",
        A164: "ISERR",
        A165: "TEXT",
        A166: "ISBLANK",
        A167: "IFNA",
        A168: "CLEAN",
        A169: "PROPER",
        A170: "MID",
        A171: "XLOOKUP",
        A172: "ACCRINTM",
        A173: "AMORLINC",
        A174: "COUPDAYS",
        A175: "COUPDAYBS",
        A176: "COUPDAYSNC",
        A177: "COUPNCD",
        A178: "COUPNUM",
        A179: "COUPPCD",
        A180: "CUMIPMT",
        A181: "CUMPRINC",
        A182: "DB",
        A183: "DDB",
        A184: "DISC",
        A185: "DOLLARDE",
        A186: "DOLLARFR",
        A187: "DURATION",
        A188: "EFFECT",
        A189: "FV",
        A190: "FVSCHEDULE",
        A191: "INTRATE",
        A192: "IPMT",
        A193: "IRR",
        A194: "ISPMT",
        A195: "MDURATION",
        A196: "MIRR",
        A197: "NOMINAL",
        A198: "NPER",
        A199: "NPV",
        A200: "PDURATION",
        A201: "PMT",
        A202: "PPMT",
        A203: "PV",
        A204: "PRICE",
        A205: "PRICEDISC",
        A206: "PRICEMAT",
        A207: "RATE",
        A208: "RECEIVED",
        A209: "RRI",
        A210: "SLN",
        A211: "SYD",
        A212: "TBILLPRICE",
        A213: "TBILLEQ",
        A214: "TBILLYIELD",
        A215: "VDB",
        A216: "XIRR",
        A217: "XNPV",
        A218: "YIELD",
        A219: "YIELDDISC",
        A220: "YIELDMAT",
        A221: "DAYS360",
        A222: "DATEDIF",
        A223: "ADDRESS",
        A224: "INDIRECT",
        B1: "evaluation",
        B2: "=ABS(-5.5)",
        B3: "=ACOS(1)",
        B4: "=ROUND(ACOSH(2),5)",
        B5: "=ROUND(ACOT(1),5)",
        B6: "=ROUND(ACOTH(2),5)",
        B7: "=AND(TRUE,TRUE)",
        B8: "=ROUND(ASIN(0.5),5)",
        B9: "=ROUND(ASINH(2), 5)",
        B10: "=ROUND(ATAN(1),5)",
        B11: "=ROUND(ATAN2(-1,0),5)",
        B12: "=ROUND(ATANH(0.7),5)",
        B13: "=ROUND(AVEDEV(I2:I9),5)",
        B14: "=ROUND(AVERAGE(H2:H9),5)",
        B15: "=AVERAGEA(G2:H9)",
        B16: '=ROUND(AVERAGEIF(J2:J9,">150000" ),5)',
        B17: '=ROUND(AVERAGEIFS(I2:I9,H2:H9,">=30",K2:K9, "<10"),5)',
        B18: "=CEILING(20.4,1)",
        B19: "=CEILING.MATH(-5.5,1,0)",
        B20: "=CEILING.PRECISE(230, 100)",
        B21: "=CHAR(74)",
        B22: "=COLUMN(C4)",
        B23: "=COLUMNS(A5:D12)",
        B24: "=CONCAT(1,23)",
        B25: '=CONCATENATE("BUT, ", "MICHEL")',
        B26: "=ROUND(COS(PI()/3),2)",
        B27: "=ROUND(COSH(2),5)",
        B28: "=ROUND(COT(PI()/6),5)",
        B29: "=ROUND(COTH(.5),5)",
        B30: '=COUNT(1,"a","5", "03/14/2021")',
        B31: '=COUNTA(1,"a","5", "03/14/2021")',
        B32: "=COUNTBLANK(F1:G1)",
        B33: '=COUNTIF(H2:H9,">30")',
        B34: '=COUNTIFS(H2:H9, ">25",K2:K9,"<4")',
        B35: "=ROUND(COVAR(H2:H9,K2:K9),5)",
        B36: "=ROUND(COVARIANCE.P(K2:K9,H2:H9),5)",
        B37: "=ROUND(COVARIANCE.P(I2:I9,J2:J9),5)",
        B38: "=ROUND(CSC(PI()/4),5)",
        B39: "=ROUND(CSCH(pi()/3),5)",
        B40: "=DATE(2020,5,25)",
        B41: '=DATEVALUE("1969/08/15")',
        B42: '=ROUND(DAVERAGE(G1:K9,"Tot. Score",J12:J13),5)',
        B43: '=DAY("2020/03/17")',
        B44: '=DAYS("2022/03/17", "2021/03/17")',
        B45: '=DCOUNT(G1:K9,"Name",H12:H13)',
        B46: '=DCOUNTA(G1:K9,"Name",H12:H13)',
        B47: "=DECIMAL(20,16)",
        B48: "=DEGREES(pi()/4)",
        B49: '=DGET(G1:K9, "Hours Played",G12:G13)',
        B50: '=DMAX(G1:K9,"Tot. Score", I12:I13)',
        B51: '=DMIN(G1:K9,"Tot. Score", H12:H13)',
        B52: '=DPRODUCT(G1:K9, "Age",K12:K13)',
        B53: '=ROUND(DSTDEV(G1:K9, "Age",H12:H13), 5)',
        B54: '=ROUND(DSTDEVP(G1:K9, "Age",H12:H13), 5)',
        B55: '=DSUM(G1:K9,"Age",I12:I13)',
        B56: '=ROUND(DVAR(G1:K9, "Hours Played",H12:H13),5)',
        B57: '=ROUND(DVARP(G1:K9, "Hours Played",H12:H13),5)',
        B58: '=EDATE("7/22/1969", -2)',
        B59: '=EOMONTH("7/21/2020", 1)',
        B60: '=EXACT("AbsSdf%", "AbsSdf%")',
        B61: "=ROUND(EXP(4),5)",
        B62: '=FIND("A", "qbdahbaazo A")',
        B63: "=FLOOR(5.5, 2)",
        B64: "=FLOOR.MATH(-5.55,2, 1)",
        B65: "=FLOOR.PRECISE(199,100)",
        B66: '=HLOOKUP("Tot. Score",H1:K9, 4,FALSE)',
        B67: '=HOUR("2:14:56 AM")',
        B68: '=IF(TRUE,"TABOURET","JAMBON")',
        B69: '=IFERROR(0/0, "no diving by zero.")',
        B70: '=IFS($H2>$H3,"first player is older",$H3>$H2, "second player is older")',
        B71: "=ISERROR(0/0)",
        B72: "=ISEVEN(3)",
        B73: '=ISLOGICAL("TRUE")',
        B74: "=ISNONTEXT(TRUE)",
        B75: "=ISNUMBER(1231.5)",
        B76: "=ISO.CEILING(-7.89)",
        B77: "=ISODD(4)",
        B78: '=ISOWEEKNUM("1/3/2016")',
        B79: '=ISTEXT("123")',
        B80: "=LARGE(H2:H9,3)",
        B81: '=LEFT("Mich",4)',
        B82: '=LEN("anticonstitutionnellement")',
        B83: "=ROUND(LN(2),5)",
        B84: "=LOOKUP(23000,H3:J3,H5:J5)",
        B85: '=LOWER("ãªAãB")',
        B86: "=MATCH(42,H2:H9,0)",
        B87: "=MAX(N1:N8)",
        B88: "=MAXA(N1:N8)",
        B89: '=MAXIFS(H2:H9,K2:K9, "<20",K2:K9, "<>4")',
        B90: "=MEDIAN(-1, 6, 7, 234, 163845)",
        B91: "=MIN(N1:N8)",
        B92: "=MINA(N1:N8)",
        B93: '=MINIFS(J2:J9,H2:H9, ">20")',
        B94: "=MINUTE(0.126)",
        B95: "=MOD(42,12)",
        B96: '=MONTH("5/2/1954")',
        B97: '=NETWORKDAYS("1/1/2013", "2/1/2013")',
        B98: '=NETWORKDAYS.INTL("1/1/2013", "2/1/2013", "0000111")',
        B99: "=NOT(FALSE)",
        B100: "=NOW()",
        B101: "=ODD(4)",
        B102: '=OR("true", FALSE)',
        B103: "=PERCENTILE(N1:N5,1)",
        B104: "=PERCENTILE.EXC(N1:N5,0.5)",
        B105: "=PERCENTILE.INC(N1:N5,0)",
        B106: "=ROUND(PI(), 5)",
        B107: "=POWER(42,2)",
        B108: "=PRODUCT(1,2,3)",
        B109: "=QUARTILE(N1:N5, 0)",
        B110: "=ROUND(QUARTILE.EXC(N1:N5, 1),5)",
        B111: "=QUARTILE.INC(N1:N5 ,4)",
        B112: "=RAND()",
        B113: "=RANDBETWEEN(1.1,2)",
        B114: '=REPLACE("ABZ", 2, 1, "Y")',
        B115: '=RIGHT("kikou", 2)',
        B116: "=ROUND(49.9)",
        B117: "=ROUNDDOWN(42, -1)",
        B118: "=ROUNDUP(-1.6,0)",
        B119: "=ROW(A234)",
        B120: "=ROWS(B3:C40)",
        B121: '=SEARCH("C", "ABCD")',
        B122: "=ROUND(SEC(PI()/3),5)",
        B123: "=ROUND(SECH(1), 5)",
        B124: '=SECOND("0:21:42")',
        B125: "=ROUND(SIN(PI()/6),5)",
        B126: "=ROUND(SINH(1),5)",
        B127: "=SMALL(H2:H9, 3)",
        B128: "=SQRT(4)",
        B129: "=STDEV(-2,0,2)",
        B130: "=STDEV.P(2,4)",
        B131: "=STDEV.S(2,4,6)",
        B132: "=STDEVA(TRUE, 3,5)",
        B133: "=ROUND(STDEVP(2,5,8),2)",
        B134: "=ROUND(STDEVPA(TRUE, 4,7),2)",
        B135: '=SUBSTITUTE("SAP is best", "SAP", "Odoo")',
        B136: "=SUM(1,2,3,4,5)",
        B137: '=SUMIF(K2:K9, "<100")',
        B138: '=SUMIFS(H2:H9,K2:K9, "<100")',
        B139: "=ROUND(TAN(PI()/4),5)",
        B140: "=ROUND(TANH(1),5)",
        B141: '=TEXTJOIN("-",TRUE,"","1","A","%")',
        B142: "=TIME(9,11,31)",
        B143: '=TIMEVALUE("1899 10 08 18:00")',
        B144: "=TODAY()",
        B145: '=TRIM(" Jean Ticonstitutionnalise ")',
        B146: "=TRUNC(42.42, 1)",
        B147: '=UPPER("grrrr !")',
        B148: "=ROUND(VAR(K1:K5),5)",
        B149: "=ROUND(VAR.P(K1:K5),5)",
        B150: "=VAR.S(2,5,8)",
        B151: "=ROUND(VARA(K1:K5),5)",
        B152: "=ROUND(VARP(K1:K5),5)",
        B153: "=ROUND(VARPA(K1:K5),5)",
        B154: '=VLOOKUP("NotACheater",G1:K9, 3, FALSE)',
        B155: '=WEEKDAY("6/12/2021")',
        B156: '=WEEKNUM("6/29/2021")',
        B157: '=WORKDAY("3/15/2021", 6)',
        B158: '=WORKDAY.INTL("3/15/2021", 6, "0111111")',
        B159: "=XOR(false, true, false, false)",
        B160: '=YEAR("3/12/2012")',
        B161: "=DELTA(1,1)",
        B162: "=NA()",
        B163: "=ISNA(NA())",
        B164: "=ISERR(NA())",
        B165: '=TEXT(5, "#,##0.00")',
        B166: "=ISBLANK(E166)",
        B167: '=IFNA(NA(), "hello")',
        B168: '=CLEAN("a"&CHAR(10))',
        B169: '=PROPER("this is a sentence")',
        B170: '=MID("Odoo", 2, 5)',
        B171: '=XLOOKUP("robot4", G2:G9, H2:H9)',
        B172: '=ACCRINTM("01/01/2020", "01/01/2021", 0.1, 100, 0)',
        B173: '=AMORLINC(50, "01/01/2021", "06/01/2021", 5, 1, 0.1)',
        B174: '=COUPDAYS("01/01/2021", "01/01/2022", 1, 0)',
        B175: '=COUPDAYBS("01/01/2021", "01/01/2022", 1, 0)',
        B176: '=COUPDAYSNC("01/01/2021", "01/01/2022", 1, 0)',
        B177: '=COUPNCD("01/01/2021", "01/01/2022", 1, 0)',
        B178: '=COUPNUM("01/01/2021", "01/01/2022", 1, 0)',
        B179: '=COUPPCD("01/01/2021", "01/01/2022", 1, 0)',
        B180: "=CUMIPMT(0.1, 12, 100, 1, 1, 1)",
        B181: "=CUMPRINC(0.1, 12, 100, 1, 1, 1)",
        B182: "=DB(50, 5, 12, 1, 1)",
        B183: "=DDB(50, 5, 12, 1, 2)",
        B184: '=DISC("01/01/2021", "01/01/2022", 50, 100, 0)',
        B185: "=DOLLARDE(10.25, 8)",
        B186: "=DOLLARFR(10.12, 8)",
        B187: '=DURATION("01/01/2021", "01/01/2022", 0.1, 50, 1, 0)',
        B188: "=EFFECT(0.1, 12)",
        B189: "=FV(0.1, 12, -10, 100, 1)",
        B190: "=FVSCHEDULE(100, I25:I27)",
        B191: '=INTRATE("01/01/2021", "01/01/2022", 100, 100, 0)',
        B192: "=IPMT(0.1, 1, 12, 100, 5, 1)",
        B193: "=IRR(H25:H27, 0.1)",
        B194: "=ISPMT(0.1, 1, 12, 100)",
        B195: '=MDURATION("01/01/2021", "01/01/2022", 0.1, 50, 1, 0)',
        B196: "=MIRR(H25:H27, 0.12, 0.1)",
        B197: "=NOMINAL(0.12, 12)",
        B198: "=NPER(0.1, -10, 100, 5, 1)",
        B199: "=NPV(0.1, 50, 60)",
        B200: "=PDURATION(0.1, 100, 5)",
        B201: "=PMT(0.1, 12, 100, 5, 1)",
        B202: "=PPMT(0.1, 1, 12, 100, 5, 1)",
        B203: "=PV(0.1, 12, -10, 5, 1)",
        B204: '=PRICE("01/01/2021", "01/01/2022", 0.1, 50, 100, 1, 0)',
        B205: '=PRICEDISC("01/01/2021", "01/01/2022", 0.1, 100, 0)',
        B206: '=PRICEMAT("01/01/2021", "01/01/2022", "01/01/2020", 0.1, 50, 0)',
        B207: "=RATE(12, -10, 100, 5, 1, 0.1)",
        B208: '=RECEIVED("01/01/2021", "01/01/2022", 100, 0.1, 0)',
        B209: "=RRI(12, 100, 5)",
        B210: "=SLN(50, 5, 12)",
        B211: "=SYD(50, 5, 12, 1)",
        B212: '=TBILLPRICE("01/01/2021", "01/01/2022", 0.1)',
        B213: '=TBILLEQ("01/01/2021", "01/01/2022", 0.1)',
        B214: '=TBILLYIELD("01/01/2021", "01/01/2022", 50)',
        B215: "=VDB(50, 5, 12, 1, 2, 2, 0)",
        B216: "=XIRR(H25:H27, J25:J27, 0.1)",
        B217: "=XNPV(0.1, H25:H27, J25:J27)",
        B218: '=YIELD("01/01/2021", "01/01/2022", 0.1, 50, 100, 1, 0)',
        B219: '=YIELDDISC("01/01/2021", "01/01/2022", 50, 100, 0)',
        B220: '=YIELDMAT("01/01/2021", "01/01/2022", "01/01/2020", 0.1, 50, 0)',
        B221: '=DAYS360("01/01/2020", "12/31/2020")',
        B222: '=DATEDIF("2001/09/15", "2003/06/10", "MD")',
        B223: '=ADDRESS(27, 53, 1, TRUE, "sheet!")',
        B224: '=INDIRECT("A1")',
        C1: "expected value",
        C2: "5.5",
        C3: "0",
        C4: "1.31696",
        C5: "0.7854",
        C6: "0.54931",
        C7: "TRUE",
        C8: "0.5236",
        C9: "1.44364",
        C10: "0.7854",
        C11: "3.14159",
        C12: "0.8673",
        C13: "2959.1625",
        C14: "26.25",
        C15: "13.125",
        C16: "222797",
        C17: "8376.65",
        C18: "21",
        C19: "-5",
        C20: "300",
        C21: "J",
        C22: "3",
        C23: "4",
        C24: '="123"',
        C25: "BUT, MICHEL",
        C26: "0.5",
        C27: "3.7622",
        C28: "=ROUND(SQRT(3),5)",
        C29: "2.16395",
        C30: "2",
        C31: "4",
        C32: "1",
        C33: "2",
        C34: "3",
        C35: "-2119.25",
        C36: "-2119.25",
        C37: "237217364.71641",
        C38: "=ROUND(SQRT(2),5)",
        C39: "0.80041",
        C40: "43976",
        C41: "25430",
        C42: "151434.625",
        C43: "17",
        C44: "365",
        C45: "0",
        C46: "3",
        C47: "32",
        C48: "45",
        C49: "252.4",
        C50: "=J7",
        C51: "=J9",
        C52: "333",
        C53: "6.02771",
        C54: "4.92161",
        C55: "101",
        C56: "17560207.92333",
        C57: "11706805.28222",
        C58: "25345",
        C59: "44074",
        C60: "TRUE",
        C61: "54.59815",
        C62: "12",
        C63: "4",
        C64: "-4",
        C65: "100",
        C66: "110120.5",
        C67: "2",
        C68: "TABOURET",
        C69: "no diving by zero.",
        C70: "first player is older",
        C71: "TRUE",
        C72: "FALSE",
        C73: "FALSE",
        C74: "TRUE",
        C75: "TRUE",
        C76: "-7",
        C77: "FALSE",
        C78: "53",
        C79: "TRUE",
        C80: "30",
        C81: "Mich",
        C82: "25",
        C83: "0.69315",
        C84: "50024",
        C85: "ãªaãb",
        C86: "4",
        C87: "0.6",
        C88: "1",
        C89: "30",
        C90: "7",
        C91: "0.1",
        C92: "0",
        C93: "5000",
        C94: "1",
        C95: "6",
        C96: "5",
        C97: "24",
        C98: "19",
        C99: "TRUE",
        C101: "5",
        C102: "TRUE",
        C103: "0.6",
        C104: "0.4",
        C105: "0.1",
        C106: "3.14159",
        C107: "1764",
        C108: "6",
        C109: "0.1",
        C110: "0.15",
        C111: "0.6",
        C113: "2",
        C114: "AYZ",
        C115: "ou",
        C116: "50",
        C117: "40",
        C118: "-2",
        C119: "234",
        C120: "38",
        C121: "3",
        C122: "2",
        C123: "0.64805",
        C124: "42",
        C125: "0.5",
        C126: "1.1752",
        C127: "26",
        C128: "2",
        C129: "2",
        C130: "1",
        C131: "2",
        C132: "2",
        C133: "2.45",
        C134: "2.45",
        C135: "Odoo is best",
        C136: "15",
        C137: "52",
        C138: "201",
        C139: "1",
        C140: "0.76159",
        C141: "1-A-%",
        C142: "0.3829976851851852",
        C143: "0.75",
        C145: "Jean Ticonstitutionnalise",
        C146: "42.4",
        C147: "GRRRR !",
        C148: "2.91667",
        C149: "2.1875",
        C150: "9",
        C151: "6.7",
        C152: "2.1875",
        C153: "5.36",
        C154: "=252.4",
        C155: "7",
        C156: "27",
        C157: "44278",
        C158: "44312",
        C159: "TRUE",
        C160: "2012",
        C161: "1",
        C162: "#N/A",
        C163: "TRUE",
        C164: "FALSE",
        C165: '="5.00"',
        C166: "=TRUE",
        C167: '="hello"',
        C168: '="a"',
        C169: '="This Is A Sentence"',
        C170: '="doo"',
        C171: "=42",
        C172: "10",
        C173: "5",
        C174: "360",
        C175: "0",
        C176: "360",
        C177: "44562",
        C178: "1",
        C179: "44197",
        C180: "0",
        C181: "-13.34211955",
        C182: "0.729166667",
        C183: "8.333333333",
        C184: "0.5",
        C185: "10.3125",
        C186: "10.096",
        C187: "1",
        C188: "0.104713067",
        C189: "-78.61571623",
        C190: "158.125",
        C191: "0",
        C192: "0",
        C193: "0.421954446",
        C194: "-9.166666667",
        C195: "0.019607843",
        C196: "-0.060608807",
        C197: "0.113865515",
        C198: "25.62524843",
        C199: "95.04132231",
        C200: "-31.43139883",
        C201: "-13.55468008",
        C202: "-13.55468008",
        C203: "73.35745596",
        C204: "2.156862745",
        C205: "90",
        C206: "-7.647058824",
        C207: "0.027937424",
        C208: "111.1111111",
        C209: "-0.220922192",
        C210: "3.75",
        C211: "6.923076923",
        C212: "89.86111111",
        C213: "0.109813678",
        C214: "0.98630137",
        C215: "6.944444444",
        C216: "0.420899528",
        C217: "-404.5918575",
        C218: "1.2",
        C219: "1",
        C220: "1",
        C221: "360",
        C222: "26",
        C223: "'sheet!'!$BA$27",
        C224: "=A1",
        D1: "is it compatible ?",
        D2: "=IF(B2=C2,1, 0)",
        D3: "=IF(B3=C3,1, 0)",
        D4: "=IF(B4=C4,1, 0)",
        D5: "=IF(B5=C5,1, 0)",
        D6: "=IF(B6=C6,1, 0)",
        D7: "=IF(B7=C7,1, 0)",
        D8: "=IF(B8=C8,1, 0)",
        D9: "=IF(B9=C9,1, 0)",
        D10: "=IF(B10=C10,1, 0)",
        D11: "=IF(B11=C11,1, 0)",
        D12: "=IF(B12=C12,1, 0)",
        D13: "=IF(B13=C13,1, 0)",
        D14: "=IF(B14=C14,1, 0)",
        D15: "=IF(B15=C15,1, 0)",
        D16: "=IF(B16=C16,1, 0)",
        D17: "=IF(B17=C17,1, 0)",
        D18: "=IF(B18=C18,1, 0)",
        D19: "=IF(B19=C19,1, 0)",
        D20: "=IF(B20=C20,1, 0)",
        D21: "=IF(B21=C21,1, 0)",
        D22: "=IF(B22=C22,1, 0)",
        D23: "=IF(B23=C23,1, 0)",
        D24: "=IF(B24=C24,1, 0)",
        D25: "=IF(B25=C25,1, 0)",
        D26: "=IF(B26=C26,1, 0)",
        D27: "=IF(B27=C27,1, 0)",
        D28: "=IF(B28=C28,1, 0)",
        D29: "=IF(B29=C29,1, 0)",
        D30: "=IF(B30=C30,1, 0)",
        D31: "=IF(B31=C31,1, 0)",
        D32: "=IF(B32=C32,1, 0)",
        D33: "=IF(B33=C33,1, 0)",
        D34: "=IF(B34=C34,1, 0)",
        D35: "=IF(B35=C35,1, 0)",
        D36: "=IF(B36=C36,1, 0)",
        D37: "=IF(B37=C37,1, 0)",
        D38: "=IF(B38=C38,1, 0)",
        D39: "=IF(B39=C39,1, 0)",
        D40: "=IF(B40=C40,1, 0)",
        D41: "=IF(B41=C41,1, 0)",
        D42: "=IF(B42=C42,1, 0)",
        D43: "=IF(B43=C43,1, 0)",
        D44: "=IF(B44=C44,1, 0)",
        D45: "=IF(B45=C45,1, 0)",
        D46: "=IF(B46=C46,1, 0)",
        D47: "=IF(B47=C47,1, 0)",
        D48: "=IF(B48=C48,1, 0)",
        D49: "=IF(B49=C49,1, 0)",
        D50: "=IF(B50=C50,1, 0)",
        D51: "=IF(B51=C51,1, 0)",
        D52: "=IF(B52=C52,1, 0)",
        D53: "=IF(B53=C53,1, 0)",
        D54: "=IF(B54=C54,1, 0)",
        D55: "=IF(B55=C55,1, 0)",
        D56: "=IF(B56=C56,1, 0)",
        D57: "=IF(B57=C57,1, 0)",
        D58: "=IF(B58=C58,1, 0)",
        D59: "=IF(B59=C59,1, 0)",
        D60: "=IF(B60=C60,1, 0)",
        D61: "=IF(B61=C61,1, 0)",
        D62: "=IF(B62=C62,1, 0)",
        D63: "=IF(B63=C63,1, 0)",
        D64: "=IF(B64=C64,1, 0)",
        D65: "=IF(B65=C65,1, 0)",
        D66: "=IF(B66=C66,1, 0)",
        D67: "=IF(B67=C67,1, 0)",
        D68: "=IF(B68=C68,1, 0)",
        D69: "=IF(B69=C69,1, 0)",
        D70: "=IF(B70=C70,1, 0)",
        D71: "=IF(B71=C71,1, 0)",
        D72: "=IF(B72=C72,1, 0)",
        D73: "=IF(B73=C73,1, 0)",
        D74: "=IF(B74=C74,1, 0)",
        D75: "=IF(B75=C75,1, 0)",
        D76: "=IF(B76=C76,1, 0)",
        D77: "=IF(B77=C77,1, 0)",
        D78: "=IF(B78=C78,1, 0)",
        D79: "=IF(B79=C79,1, 0)",
        D80: "=IF(B80=C80,1, 0)",
        D81: "=IF(B81=C81,1, 0)",
        D82: "=IF(B82=C82,1, 0)",
        D83: "=IF(B83=C83,1, 0)",
        D84: "=IF(B84=C84,1, 0)",
        D85: "=IF(B85=C85,1, 0)",
        D86: "=IF(B86=C86,1, 0)",
        D87: "=IF(B87=C87,1, 0)",
        D88: "=IF(B88=C88,1, 0)",
        D89: "=IF(B89=C89,1, 0)",
        D90: "=IF(B90=C90,1, 0)",
        D91: "=IF(B91=C91,1, 0)",
        D92: "=IF(B92=C92,1, 0)",
        D93: "=IF(B93=C93,1, 0)",
        D94: "=IF(B94=C94,1, 0)",
        D95: "=IF(B95=C95,1, 0)",
        D96: "=IF(B96=C96,1, 0)",
        D97: "=IF(B97=C97,1, 0)",
        D98: "=IF(B98=C98,1, 0)",
        D99: "=IF(B99=C99,1, 0)",
        D100: "=IF(ISNUMBER(B100),1, 0)",
        D101: "=IF(B101=C101,1, 0)",
        D102: "=IF(B102=C102,1, 0)",
        D103: "=IF(B103=C103,1, 0)",
        D104: "=IF(B104=C104,1, 0)",
        D105: "=IF(B105=C105,1, 0)",
        D106: "=IF(B106=C106,1, 0)",
        D107: "=IF(B107=C107,1, 0)",
        D108: "=IF(B108=C108,1, 0)",
        D109: "=IF(B109=C109,1, 0)",
        D110: "=IF(B110=C110,1, 0)",
        D111: "=IF(B111=C111,1, 0)",
        D112: "=IF(AND(B112>=0,B112<1 ),1, 0)",
        D113: "=IF(B113=C113,1, 0)",
        D114: "=IF(B114=C114,1, 0)",
        D115: "=IF(B115=C115,1, 0)",
        D116: "=IF(B116=C116,1, 0)",
        D117: "=IF(B117=C117,1, 0)",
        D118: "=IF(B118=C118,1, 0)",
        D119: "=IF(B119=C119,1, 0)",
        D120: "=IF(B120=C120,1, 0)",
        D121: "=IF(B121=C121,1, 0)",
        D122: "=IF(B122=C122,1, 0)",
        D123: "=IF(B123=C123,1, 0)",
        D124: "=IF(B124=C124,1, 0)",
        D125: "=IF(B125=C125,1, 0)",
        D126: "=IF(B126=C126,1, 0)",
        D127: "=IF(B127=C127,1, 0)",
        D128: "=IF(B128=C128,1, 0)",
        D129: "=IF(B129=C129,1, 0)",
        D130: "=IF(B130=C130,1, 0)",
        D131: "=IF(B131=C131,1, 0)",
        D132: "=IF(B132=C132,1, 0)",
        D133: "=IF(B133=C133,1, 0)",
        D134: "=IF(B134=C134,1, 0)",
        D135: "=IF(B135=C135,1, 0)",
        D136: "=IF(B136=C136,1, 0)",
        D137: "=IF(B137=C137,1, 0)",
        D138: "=IF(B138=C138,1, 0)",
        D139: "=IF(B139=C139,1, 0)",
        D140: "=IF(B140=C140,1, 0)",
        D141: "=IF(B141=C141,1, 0)",
        D142: "=IF(B142=C142,1, 0)",
        D143: "=IF(B143=C143,1, 0)",
        D144: "=IF(ISNUMBER(B144),1, 0)",
        D145: "=IF(B145=C145,1, 0)",
        D146: "=IF(B146=C146,1, 0)",
        D147: "=IF(B147=C147,1, 0)",
        D148: "=IF(B148=C148,1, 0)",
        D149: "=IF(B149=C149,1, 0)",
        D150: "=IF(B150=C150,1, 0)",
        D151: "=IF(B151=C151,1, 0)",
        D152: "=IF(B152=C152,1, 0)",
        D153: "=IF(B153=C153,1, 0)",
        D154: "=IF(B154=C154,1, 0)",
        D155: "=IF(B155=C155,1, 0)",
        D156: "=IF(B156=C156,1, 0)",
        D157: "=IF(B157=C157,1, 0)",
        D158: "=IF(B158=C158,1, 0)",
        D159: "=IF(B159=C159,1, 0)",
        D160: "=IF(B160=C160,1, 0)",
        D161: "=IF(B161=C161,1, 0)",
        D162: "=IF(ISNA(B162),1, 0)",
        D163: "=IF(B163=C163,1, 0)",
        D164: "=IF(B164=C164,1, 0)",
        D165: "=IF(B165=C165,1, 0)",
        D166: "=IF(B166=C166,1, 0)",
        D167: "=IF(B167=C167,1, 0)",
        D168: "=IF(B168=C168,1, 0)",
        D169: "=IF(B169=C169,1, 0)",
        D170: "=IF(B170=C170,1, 0)",
        D171: "=IF(B171=C171,1, 0)",
        D172: "=IF(B172=C172, 1, 0)",
        D173: "=IF(B173=C173, 1, 0)",
        D174: "=IF(B174=C174, 1, 0)",
        D175: "=IF(B175=C175, 1, 0)",
        D176: "=IF(B176=C176, 1, 0)",
        D177: "=IF(B177=C177, 1, 0)",
        D178: "=IF(B178=C178, 1, 0)",
        D179: "=IF(B179=C179, 1, 0)",
        D180: "=IF(B180=C180, 1, 0)",
        D181: "=IF(FLOOR(B181, 0.0001)=FLOOR(C181, 0.0001), 1, 0)",
        D182: "=IF(FLOOR(B182, 0.0001)=FLOOR(C182, 0.0001), 1, 0)",
        D183: "=IF(FLOOR(B183, 0.0001)=FLOOR(C183, 0.0001), 1, 0)",
        D184: "=IF(FLOOR(B184, 0.0001)=FLOOR(C184, 0.0001), 1, 0)",
        D185: "=IF(FLOOR(B185, 0.0001)=FLOOR(C185, 0.0001), 1, 0)",
        D186: "=IF(FLOOR(B186, 0.0001)=FLOOR(C186, 0.0001), 1, 0)",
        D187: "=IF(B187=C187, 1, 0)",
        D188: "=IF(FLOOR(B188, 0.0001)=FLOOR(C188, 0.0001), 1, 0)",
        D189: "=IF(FLOOR(B189, 0.0001)=FLOOR(C189, 0.0001), 1, 0)",
        D190: "=IF(FLOOR(B190, 0.0001)=FLOOR(C190, 0.0001), 1, 0)",
        D191: "=IF(B191=C191, 1, 0)",
        D192: "=IF(B192=C192, 1, 0)",
        D193: "=IF(FLOOR(B193, 0.0001)=FLOOR(C193, 0.0001), 1, 0)",
        D194: "=IF(FLOOR(B194, 0.0001)=FLOOR(C194, 0.0001), 1, 0)",
        D195: "=IF(FLOOR(B195, 0.0001)=FLOOR(C195, 0.0001), 1, 0)",
        D196: "=IF(FLOOR(B196, 0.0001)=FLOOR(C196, 0.0001), 1, 0)",
        D197: "=IF(FLOOR(B197, 0.0001)=FLOOR(C197, 0.0001), 1, 0)",
        D198: "=IF(FLOOR(B198, 0.0001)=FLOOR(C198, 0.0001), 1, 0)",
        D199: "=IF(FLOOR(B199, 0.0001)=FLOOR(C199, 0.0001), 1, 0)",
        D200: "=IF(FLOOR(B200, 0.0001)=FLOOR(C200, 0.0001), 1, 0)",
        D201: "=IF(FLOOR(B201, 0.0001)=FLOOR(C201, 0.0001), 1, 0)",
        D202: "=IF(FLOOR(B202, 0.0001)=FLOOR(C202, 0.0001), 1, 0)",
        D203: "=IF(FLOOR(B203, 0.0001)=FLOOR(C203, 0.0001), 1, 0)",
        D204: "=IF(FLOOR(B204, 0.0001)=FLOOR(C204, 0.0001), 1, 0)",
        D205: "=IF(B205=C205, 1, 0)",
        D206: "=IF(FLOOR(B206, 0.0001)=FLOOR(C206, 0.0001), 1, 0)",
        D207: "=IF(FLOOR(B207, 0.0001)=FLOOR(C207, 0.0001), 1, 0)",
        D208: "=IF(FLOOR(B208, 0.0001)=FLOOR(C208, 0.0001), 1, 0)",
        D209: "=IF(FLOOR(B209, 0.0001)=FLOOR(C209, 0.0001), 1, 0)",
        D210: "=IF(FLOOR(B210, 0.0001)=FLOOR(C210, 0.0001), 1, 0)",
        D211: "=IF(FLOOR(B211, 0.0001)=FLOOR(C211, 0.0001), 1, 0)",
        D212: "=IF(FLOOR(B212, 0.0001)=FLOOR(C212, 0.0001), 1, 0)",
        D213: "=IF(FLOOR(B213, 0.0001)=FLOOR(C213, 0.0001), 1, 0)",
        D214: "=IF(FLOOR(B214, 0.0001)=FLOOR(C214, 0.0001), 1, 0)",
        D215: "=IF(FLOOR(B215, 0.0001)=FLOOR(C215, 0.0001), 1, 0)",
        D216: "=IF(FLOOR(B216, 0.0001)=FLOOR(C216, 0.0001), 1, 0)",
        D217: "=IF(FLOOR(B217, 0.0001)=FLOOR(C217, 0.0001), 1, 0)",
        D218: "=IF(FLOOR(B218, 0.0001)=FLOOR(C218, 0.0001), 1, 0)",
        D219: "=IF(B219=C219, 1, 0)",
        D220: "=IF(B220=C220, 1, 0)",
        D221: "=IF(B221=C221, 1, 0)",
        D222: "=IF(B222=C222, 1, 0)",
        D223: "=IF(B223=C223, 1, 0)",
        D224: "=IF(B224=C224, 1, 0)",
        G1: "Name",
        G2: "Robot1",
        G3: "Robot2",
        G4: "NotACheater",
        G5: "Robot4",
        G6: "Robot3",
        G7: "Robot6",
        G8: "Michel",
        G9: "Robot7",
        G11: "criteria",
        G12: "Name",
        G13: "NotACheater",
        H1: "Age",
        H2: "26",
        H3: "13",
        H4: "26",
        H5: "42",
        H6: "9",
        H7: "27",
        H8: "30",
        H9: "37",
        H12: "Age",
        H13: ">29",
        H24: "Cashflows",
        H25: "1000",
        H26: "-1000",
        H27: "-600",
        H34: "UNIQUE",
        H38: "EXPAND",
        H42: "FILTER",
        H46: "TRANSPOSE",
        H50: "MUNIT",
        H54: "FLATTEN",
        H60: "FREQUENCY",
        H64: "ARRAY.CONSTRAIN",
        H68: "CHOOSECOLS",
        H72: "CHOOSEROWS",
        H76: "SUMPRODUCT",
        H80: "MINVERSE",
        H84: "MDETERM",
        H88: "MMULT",
        H92: "SUMX2MY2",
        H96: "SUMX2PY2",
        H100: "SUMXMY2",
        H104: "TOCOL",
        H110: "TOROW",
        H114: "SPLIT",
        H117: "HSTACK",
        H121: "VSTACK",
        H127: "WRAPCOLS",
        H132: "WRAPROWS",
        I1: "Hours Played",
        I2: "1204.7",
        I3: "500.9",
        I4: "252.4",
        I5: "4701.3",
        I6: "12.1",
        I7: "4000",
        I8: "12052",
        I9: "4890.1",
        I12: "Hours Played",
        I13: "<4500",
        I24: "Rates",
        I25: "0.1",
        I26: "0.15",
        I27: "0.25",
        I34: "=IF(AND(L34=N34, M34=O34), 1, 0)",
        I38: "=IF(AND(K38=M38, L38=N38, K39=M39, L39=N39), 1, 0)",
        I42: "=IF(AND(L42=N42, M42=O42), 1, 0)",
        I46: "=IF(AND(L46=N46, M46=O46, L47=N47, M47=O47), 1, 0)",
        I50: "=IF(AND(J50=L50, K50=M50, J51=L51, K51=M51), 1, 0)",
        I54: "=IF(AND(L54=M54, L55=M55, L56=M56, L57=M57), 1, 0)",
        I60: "=IF(AND(L60=M60, L61=M61), 1, 0)",
        I64: "=IF(AND(L64=M64, L65=M65), 1, 0)",
        I68: "=IF(AND(L68=M68, L69=M69), 1, 0)",
        I72: "=IF(AND(L72=N72, M72=O72), 1, 0)",
        I76: "=IF(AND(L76=M76), 1, 0)",
        I80: "=IF(AND(L80=N80, M80=O80, L81=N81, M81=O81), 1, 0)",
        I84: "=IF(AND(L84=M84), 1, 0)",
        I88: "=IF(AND(L88=N88, M88=O88, L89=N89, M89=O89), 1, 0)",
        I92: "=IF(AND(L92=M92), 1, 0)",
        I96: "=IF(AND(L96=M96), 1, 0)",
        I100: "=IF(AND(L100=M100), 1, 0)",
        I104: "=IF(AND(L104=M104, L105=M105, L106=M106, L107=M107), 1, 0)",
        I110: "=IF(AND(L110=P110, M110=Q110, N110=R110, O110=S110), 1, 0)",
        I114: "=IF(AND(K114=O114, L114=P114, M114=Q114, N114=R114), 1, 0)",
        I117: "=IF(AND(L117=P117, M117=Q117, N117=R117, O117=S117), 1, 0)",
        I121: "=IF(AND(L121=M121, L122=M122, L123=M123, L124=M124), 1, 0)",
        I127: "=IF(AND(K127=L127, K128=L128, K129=L129), 1, 0)",
        I132: "=IF(AND(K132=N132, L132=O132, M132=P132), 1, 0)",
        J1: "Tot. Score",
        J2: "25618",
        J3: "23000",
        J4: "110120.5",
        J5: "50024",
        J6: "2",
        J7: "189576",
        J8: "256018",
        J9: "5000",
        J12: "Tot. Score",
        J13: ">42000",
        J24: "Dates",
        J25: "=DATE(2020, 01, 01)",
        J26: "=DATE(2021, 01, 01)",
        J27: "=DATE(2022, 01, 01)",
        J33: "Arguments",
        J34: "1",
        J35: "1",
        J37: "Arguments",
        J38: "1",
        J41: "Arguments",
        J42: "1",
        J43: "0",
        J45: "Arguments",
        J46: "1",
        J47: "3",
        J49: "Results",
        J50: "=MUNIT(2)",
        J53: "Arguments",
        J54: "1",
        J55: "3",
        J59: "Arguments",
        J60: "1",
        J61: "0",
        J63: "Arguments",
        J64: "1",
        J65: "3",
        J67: "Arguments",
        J68: "1",
        J69: "3",
        J71: "Arguments",
        J72: "1",
        J73: "3",
        J75: "Arguments",
        J76: "1",
        J77: "3",
        J79: "Arguments",
        J80: "1",
        J81: "3",
        J83: "Arguments",
        J84: "1",
        J85: "3",
        J87: "Arguments",
        J88: "1",
        J89: "3",
        J91: "Arguments",
        J92: "1",
        J93: "3",
        J95: "Arguments",
        J96: "1",
        J97: "3",
        J99: "Arguments",
        J100: "1",
        J101: "3",
        J103: "Arguments",
        J104: "1",
        J105: "3",
        J109: "Arguments",
        J110: "1",
        J111: "3",
        J113: "Arguments",
        J114: "Hello there; General Kenobi",
        J116: "Arguments",
        J117: "1",
        J118: "3",
        J120: "Arguments",
        J121: "1",
        J122: "3",
        J126: "Arguments",
        J127: "1",
        J128: "3",
        J131: "Arguments",
        J132: "1",
        J133: "3",
        K1: "Rank (lower the better)",
        K2: "5",
        K3: "7",
        K4: "3",
        K5: "4",
        K6: "1000",
        K7: "2",
        K8: "1",
        K9: "30",
        K12: "Rank (lower the better)",
        K13: ">25",
        K34: "2",
        K35: "2",
        K37: "Results",
        K38: "=EXPAND(J38, 2, 2, 0)",
        K42: "2",
        K43: "4",
        K46: "2",
        K47: "4",
        K54: "2",
        K55: "4",
        K60: "2",
        K61: "4",
        K64: "2",
        K65: "4",
        K68: "2",
        K69: "4",
        K72: "2",
        K73: "4",
        K76: "2",
        K77: "4",
        K80: "2",
        K81: "4",
        K84: "2",
        K85: "4",
        K88: "2",
        K89: "4",
        K92: "2",
        K93: "4",
        K96: "2",
        K97: "4",
        K100: "2",
        K101: "4",
        K104: "2",
        K105: "4",
        K110: "2",
        K111: "4",
        K113: "Results",
        K114: '=SPLIT(J114, " ")',
        K117: "2",
        K118: "4",
        K121: "2",
        K122: "4",
        K126: "Results",
        K127: "=WRAPCOLS(J127:J128, 3, 0)",
        K131: "Results",
        K132: "=WRAPROWS(J132:J133, 3, 0)",
        L33: "Results",
        L34: "=UNIQUE(J34:K35)",
        L41: "Results",
        L42: "=FILTER(J42:K43, J42:J43)",
        L45: "Results",
        L46: "=TRANSPOSE(J46:K47)",
        L49: "Expected",
        L50: "1",
        L51: "0",
        L53: "Results",
        L54: "=FLATTEN(J54:K55)",
        L59: "Results",
        L60: "=FREQUENCY(J60:K61, 2)",
        L63: "Results",
        L64: "=ARRAY.CONSTRAIN(J64:K65, 2, 1)",
        L67: "Results",
        L68: "=CHOOSECOLS(J68:K69, 2)",
        L71: "Results",
        L72: "=CHOOSEROWS(J72:K73, 2)",
        L75: "Results",
        L76: "=SUMPRODUCT(J76:J77, K76:K77)",
        L79: "Results",
        L80: "=MINVERSE(J80:K81)",
        L83: "Results",
        L84: "=MDETERM(J84:K85)",
        L87: "Results",
        L88: "=MMULT(J88:K89, J88:K89)",
        L91: "Results",
        L92: "=SUMX2MY2(J92:J93, K92:K93)",
        L95: "Results",
        L96: "=SUMX2PY2(J96:J97, K96:K97)",
        L99: "Results",
        L100: "=SUMXMY2(J100:J101, K100:K101)",
        L103: "Results",
        L104: "=TOCOL(J104:K105)",
        L109: "Results",
        L110: "=TOROW(J110:K111)",
        L116: "Results",
        L117: "=HSTACK(J117:K117, J118:K118)",
        L120: "Results",
        L121: "=VSTACK(J121:J122, K121:K122)",
        L126: "Expected",
        L127: "1",
        L128: "3",
        L129: "0",
        M37: "Expected",
        M38: "1",
        M39: "0",
        M50: "0",
        M51: "1",
        M53: "Expected",
        M54: "1",
        M55: "2",
        M56: "3",
        M57: "4",
        M59: "Expected",
        M60: "3",
        M61: "1",
        M63: "Expected",
        M64: "1",
        M65: "3",
        M67: "Expected",
        M68: "2",
        M69: "4",
        M75: "Expected",
        M76: "14",
        M83: "Expected",
        M84: "-2",
        M91: "Expected",
        M92: "-10",
        M95: "Expected",
        M96: "30",
        M99: "Expected",
        M100: "2",
        M103: "Expected",
        M104: "1",
        M105: "2",
        M106: "3",
        M107: "4",
        M120: "Expected",
        M121: "1",
        M122: "3",
        M123: "2",
        M124: "4",
        N1: "0.1",
        N2: "0.2",
        N3: "0.4",
        N4: "0.5",
        N5: "0.6",
        N6: "A",
        N7: "TRUE",
        N8: "FALSE",
        N33: "Expected",
        N34: "1",
        N38: "0",
        N39: "0",
        N41: "Expected",
        N42: "1",
        N45: "Expected",
        N46: "1",
        N47: "2",
        N71: "Expected",
        N72: "3",
        N79: "Expected",
        N80: "-2",
        N81: "1.5",
        N87: "Expected",
        N88: "7",
        N89: "15",
        N131: "Expected",
        N132: "1",
        O34: "2",
        O42: "2",
        O46: "3",
        O47: "4",
        O72: "4",
        O80: "1",
        O81: "-0.5",
        O88: "10",
        O89: "22",
        O113: "Expected",
        O114: "Hello",
        O132: "3",
        P109: "Expected",
        P110: "1",
        P114: "there;",
        P116: "Expected",
        P117: "1",
        P132: "0",
        Q110: "2",
        Q114: "General",
        Q117: "2",
        R110: "3",
        R114: "Kenobi",
        R117: "3",
        S110: "4",
        S117: "4",
        A225: "LOG",
        B225: "=LOG(1000, 10)",
        C225: "3",
        D225: "=IF(B225=C225,1, 0)",
        A226: "TEXTAFTER",
        B226: '=TEXTAFTER("Hello there; General Kenobi", "; ")',
        C226: "General Kenobi",
        D226: "=IF(B226=C226,1, 0)",
        A227: "TEXTBEFORE",
        B227: '=TEXTBEFORE("Hello there; General Kenobi", "; ")',
        C227: "Hello there",
        D227: "=IF(B227=C227,1, 0)",
      },
      styles: {
        "H24:J24": 10,
        "G1:K1": 10,
        "G12:K12": 10,
      },
      formats: {
        C40: 3,
        "C58:C59": 3,
        "C157:C158": 3,
        C142: 4,
      },
      borders: {
        H33: 1,
        H37: 1,
        H41: 1,
        H45: 1,
        H49: 1,
        H53: 1,
        H59: 1,
        H63: 1,
        H67: 1,
        H71: 1,
        H75: 1,
        H79: 1,
        H83: 1,
        H87: 1,
        H91: 1,
        H95: 1,
        H99: 1,
        H103: 1,
        H109: 1,
        H113: 1,
        H116: 1,
        H120: 1,
        H126: 1,
        H131: 1,
        L131: 1,
        M49: 1,
        "L113:M113": 1,
        N37: 1,
        "M109:N109": 1,
        "M116:N116": 1,
        O33: 1,
        O41: 1,
        O45: 1,
        O71: 1,
        O79: 1,
        O87: 1,
        "O131:P131": 1,
        "P113:R113": 1,
        "Q109:S109": 1,
        "Q116:S116": 1,
        H34: 2,
        H38: 2,
        H42: 2,
        H46: 2,
        H50: 2,
        H54: 2,
        H60: 2,
        H64: 2,
        H68: 2,
        H72: 2,
        H76: 2,
        H80: 2,
        H84: 2,
        H88: 2,
        H92: 2,
        H96: 2,
        H100: 2,
        H104: 2,
        H110: 2,
        H114: 2,
        H117: 2,
        H121: 2,
        H127: 2,
        H132: 2,
        L132: 2,
        M50: 2,
        "L114:M114": 2,
        N38: 2,
        "M110:N110": 2,
        "M117:N117": 2,
        O34: 2,
        O42: 2,
        O46: 2,
        O72: 2,
        O80: 2,
        O88: 2,
        "O132:P132": 2,
        "P114:R114": 2,
        "Q110:S110": 2,
        "Q117:S117": 2,
        I33: 3,
        I37: 3,
        I41: 3,
        I45: 3,
        I49: 3,
        I53: 3,
        I59: 3,
        I63: 3,
        I67: 3,
        I71: 3,
        I75: 3,
        I79: 3,
        I83: 3,
        I87: 3,
        I91: 3,
        I95: 3,
        I99: 3,
        I103: 3,
        I109: 3,
        I113: 3,
        I116: 3,
        I120: 3,
        I126: 3,
        I131: 3,
        K33: 3,
        K41: 3,
        K45: 3,
        K49: 3,
        K53: 3,
        K59: 3,
        K63: 3,
        K67: 3,
        K71: 3,
        K75: 3,
        K79: 3,
        K83: 3,
        K87: 3,
        K91: 3,
        K95: 3,
        K99: 3,
        K103: 3,
        K109: 3,
        K116: 3,
        K120: 3,
        L37: 3,
        M33: 3,
        M41: 3,
        M45: 3,
        M71: 3,
        M79: 3,
        M87: 3,
        M131: 3,
        N113: 3,
        O109: 3,
        O116: 3,
        I34: 4,
        I38: 4,
        I42: 4,
        I46: 4,
        I50: 4,
        I54: 4,
        I60: 4,
        I64: 4,
        I68: 4,
        I72: 4,
        I76: 4,
        I80: 4,
        I84: 4,
        I88: 4,
        I92: 4,
        I96: 4,
        I100: 4,
        I104: 4,
        I110: 4,
        I114: 4,
        I117: 4,
        I121: 4,
        I127: 4,
        I132: 4,
        K34: 4,
        K42: 4,
        K46: 4,
        K50: 4,
        K54: 4,
        K60: 4,
        K64: 4,
        K68: 4,
        K72: 4,
        K76: 4,
        K80: 4,
        K84: 4,
        K88: 4,
        K92: 4,
        K96: 4,
        K100: 4,
        K104: 4,
        K110: 4,
        K117: 4,
        K121: 4,
        L38: 4,
        M34: 4,
        M42: 4,
        M46: 4,
        M72: 4,
        M80: 4,
        M88: 4,
        M132: 4,
        N114: 4,
        O110: 4,
        O117: 4,
        I35: 5,
        I39: 5,
        I43: 5,
        I47: 5,
        I51: 5,
        "I55:I57": 5,
        I61: 5,
        I65: 5,
        I69: 5,
        I73: 5,
        I77: 5,
        I81: 5,
        I85: 5,
        I89: 5,
        I93: 5,
        I97: 5,
        I101: 5,
        "I105:I107": 5,
        I111: 5,
        I118: 5,
        "I122:I124": 5,
        "I128:I129": 5,
        I133: 5,
        K35: 5,
        K43: 5,
        K47: 5,
        K51: 5,
        "K55:K57": 5,
        K61: 5,
        K65: 5,
        K69: 5,
        K73: 5,
        K77: 5,
        K81: 5,
        K85: 5,
        K89: 5,
        K93: 5,
        K97: 5,
        K101: 5,
        "K105:K107": 5,
        K111: 5,
        K118: 5,
        "K122:K124": 5,
        L39: 5,
        M35: 5,
        M43: 5,
        M47: 5,
        M73: 5,
        M81: 5,
        M89: 5,
        M133: 5,
        O111: 5,
        O118: 5,
        J33: 6,
        J41: 6,
        J45: 6,
        J49: 6,
        J53: 6,
        J59: 6,
        J63: 6,
        J67: 6,
        J71: 6,
        J75: 6,
        J79: 6,
        J83: 6,
        J87: 6,
        J91: 6,
        J95: 6,
        J99: 6,
        J103: 6,
        J109: 6,
        J116: 6,
        J120: 6,
        K37: 6,
        K113: 6,
        K131: 6,
        L33: 6,
        L41: 6,
        L45: 6,
        L49: 6,
        L71: 6,
        L79: 6,
        L87: 6,
        L109: 6,
        L116: 6,
        L126: 6,
        M37: 6,
        M53: 6,
        M59: 6,
        M63: 6,
        M67: 6,
        M75: 6,
        M83: 6,
        M91: 6,
        M95: 6,
        M99: 6,
        M103: 6,
        M120: 6,
        N33: 6,
        N41: 6,
        N45: 6,
        N71: 6,
        N79: 6,
        N87: 6,
        N131: 6,
        O113: 6,
        P109: 6,
        P116: 6,
        J34: 7,
        J42: 7,
        J46: 7,
        J50: 7,
        J54: 7,
        J60: 7,
        J64: 7,
        J68: 7,
        J72: 7,
        J76: 7,
        J80: 7,
        J84: 7,
        J88: 7,
        J92: 7,
        J96: 7,
        J100: 7,
        J104: 7,
        J110: 7,
        J117: 7,
        J121: 7,
        K38: 7,
        K114: 7,
        K132: 7,
        L34: 7,
        L42: 7,
        L46: 7,
        L50: 7,
        L72: 7,
        L80: 7,
        L88: 7,
        L110: 7,
        L117: 7,
        L127: 7,
        M38: 7,
        M54: 7,
        M60: 7,
        M64: 7,
        M68: 7,
        M76: 7,
        M84: 7,
        M92: 7,
        M96: 7,
        M100: 7,
        M104: 7,
        M121: 7,
        N34: 7,
        N42: 7,
        N46: 7,
        N72: 7,
        N80: 7,
        N88: 7,
        N132: 7,
        O114: 7,
        P110: 7,
        P117: 7,
        J35: 8,
        J43: 8,
        J47: 8,
        J51: 8,
        "J55:J57": 8,
        J61: 8,
        J65: 8,
        J69: 8,
        J73: 8,
        J77: 8,
        J81: 8,
        J85: 8,
        J89: 8,
        J93: 8,
        J97: 8,
        J101: 8,
        "J105:J107": 8,
        J111: 8,
        J118: 8,
        "J122:J124": 8,
        K39: 8,
        K133: 8,
        L35: 8,
        L43: 8,
        L47: 8,
        L51: 8,
        L73: 8,
        L81: 8,
        L89: 8,
        L111: 8,
        L118: 8,
        "L128:L129": 8,
        M39: 8,
        "M55:M57": 8,
        M61: 8,
        M65: 8,
        M69: 8,
        M77: 8,
        M85: 8,
        M93: 8,
        M97: 8,
        M101: 8,
        "M105:M107": 8,
        "M122:M124": 8,
        N35: 8,
        N43: 8,
        N47: 8,
        N73: 8,
        N81: 8,
        N89: 8,
        N133: 8,
        P111: 8,
        P118: 8,
        J37: 9,
        J113: 9,
        J131: 9,
        "J126:K126": 9,
        L53: 9,
        L59: 9,
        L63: 9,
        L67: 9,
        L75: 9,
        L83: 9,
        L91: 9,
        L95: 9,
        L99: 9,
        L103: 9,
        L120: 9,
        J38: 10,
        J114: 10,
        J132: 10,
        "J127:K127": 10,
        L54: 10,
        L60: 10,
        L64: 10,
        L68: 10,
        L76: 10,
        L84: 10,
        L92: 10,
        L96: 10,
        L100: 10,
        L104: 10,
        L121: 10,
        J39: 11,
        J133: 11,
        "J128:K129": 11,
        "L55:L57": 11,
        L61: 11,
        L65: 11,
        L69: 11,
        L77: 11,
        L85: 11,
        L93: 11,
        L97: 11,
        L101: 11,
        "L105:L107": 11,
        "L122:L124": 11,
      },
      conditionalFormats: [
        {
          id: "3",
          ranges: ["D:D"],
          rule: {
            values: ["1"],
            operator: "Equal",
            type: "CellIsRule",
            style: {
              fillColor: "#B6D7A8",
            },
          },
        },
        {
          id: "4",
          ranges: ["D:D"],
          rule: {
            values: ["0"],
            operator: "Equal",
            type: "CellIsRule",
            style: {
              fillColor: "#E06666",
            },
          },
        },
        {
          id: "5",
          ranges: ["I33:I"],
          rule: {
            values: ["1"],
            operator: "Equal",
            type: "CellIsRule",
            style: {
              fillColor: "#B6D7A8",
            },
          },
        },
        {
          id: "6",
          ranges: ["I33:I"],
          rule: {
            values: ["0"],
            operator: "Equal",
            type: "CellIsRule",
            style: {
              fillColor: "#E06666",
            },
          },
        },
      ],
      dataValidationRules: [],
      figures: [],
      tables: [
        {
          range: "G1:K9",
          type: "static",
          config: {
            hasFilters: false,
            totalRow: false,
            firstColumn: true,
            lastColumn: false,
            numberOfHeaders: 1,
            bandedRows: true,
            bandedColumns: false,
            styleId: "TableStyleMedium4",
          },
        },
        {
          range: "G12:K13",
          type: "static",
          config: {
            hasFilters: false,
            totalRow: false,
            firstColumn: true,
            lastColumn: false,
            numberOfHeaders: 1,
            bandedRows: false,
            bandedColumns: false,
            styleId: "TableStyleMedium4",
          },
        },
        {
          range: "H24:J27",
          type: "static",
          config: {
            hasFilters: false,
            totalRow: false,
            firstColumn: false,
            lastColumn: false,
            numberOfHeaders: 1,
            bandedRows: true,
            bandedColumns: false,
            styleId: "TableStyleMedium9",
          },
        },
      ],
      areGridLinesVisible: true,
      isVisible: true,
      color: "#6AA84F",
      headerGroups: {
        ROW: [],
        COL: [],
      },
    },
    {
      id: "border_sheet",
      name: "Borders",
      colNumber: 26,
      rowNumber: 100,
      rows: {},
      cols: {},
      merges: [],
      cells: {
        B2: "left",
        B4: "top",
        B6: "right",
        B8: "bottom",
        B10: "all",
        D2: "thin (default)",
        D4: "medium",
        D6: "thick",
        D8: "dashed",
        D10: "dotted",
        F2: "mixed",
      },
      styles: {},
      formats: {},
      borders: {
        B3: 1,
        B8: 1,
        D1: 1,
        B4: 2,
        B11: 2,
        A2: 5,
        A10: 5,
        B6: 5,
        C2: 5,
        B2: 8,
        B9: 12,
        B10: 13,
        D2: 13,
        C4: 14,
        C6: 15,
        C8: 16,
        C10: 17,
        D3: 18,
        D4: 19,
        D5: 20,
        D6: 21,
        D7: 22,
        D8: 23,
        D9: 24,
        D10: 25,
        D11: 26,
        E2: 27,
        E4: 28,
        E6: 29,
        E8: 30,
        E10: 31,
        F1: 32,
        F2: 33,
        F3: 34,
        G2: 35,
      },
      conditionalFormats: [],
      dataValidationRules: [],
      figures: [],
      tables: [],
      areGridLinesVisible: true,
      isVisible: true,
      headerGroups: {
        ROW: [],
        COL: [],
      },
    },
    {
      id: "sh5",
      name: "Data Validation",
      colNumber: 26,
      rowNumber: 50,
      rows: {},
      cols: {
        5: {
          size: 150,
        },
      },
      merges: [],
      cells: {
        A1: "Data Validation Corner",
        A3: "Perceval",
        A4: "Arthur",
        A5: "Gauvin",
        A6: "Yvain",
        B2: "Age",
        B3: "unknown",
        B4: "42",
        B5: "20",
        B6: "19",
        C2: "Birthday",
        C3: "unknown",
        C4: "-453874",
        C5: "-445626",
        C6: "-445248",
        D2: "Origin",
        D3: "Wales",
        D4: "Rome",
        D5: "Britain",
        D6: "Britain",
        E2: "Is king ?",
        E3: "FALSE",
        E4: "TRUE",
        E5: "FALSE",
        E6: "FALSE",
        F2: "Email",
        F3: "perceval@odoo.com",
        F4: "arthur@kaamelott.fr",
        F5: "Gauvin@odoo.com",
        F6: "Yvain{at}odoo.com",
      },
      styles: {
        "E3:E6": 7,
        "A1:A2": 10,
        "B2:F2": 10,
      },
      formats: {
        "C3:C6": 3,
      },
      borders: {},
      conditionalFormats: [],
      dataValidationRules: [
        {
          id: "dv1",
          criterion: {
            type: "isBetween",
            values: ["0", "100"],
          },
          ranges: ["B3:B6"],
        },
        {
          id: "dv2",
          criterion: {
            type: "dateIsValid",
            values: [],
          },
          ranges: ["C3:C6"],
        },
        {
          id: "dv3",
          criterion: {
            type: "isValueInList",
            values: ["Wales", "Britain", "Rome"],
            colors: {
              Britain: "#0C343D",
              Rome: "#F4CCCC",
            },
            displayStyle: "chip",
          },
          ranges: ["D3:D6"],
        },
        {
          id: "dv4",
          criterion: {
            type: "isBoolean",
            values: [],
          },
          ranges: ["E3:E6"],
        },
        {
          id: "dv5",
          criterion: {
            type: "textIsEmail",
            values: [],
          },
          ranges: ["F3:F6"],
        },
      ],
      figures: [],
      tables: [
        {
          range: "A2:F6",
          type: "static",
          config: {
            hasFilters: true,
            totalRow: false,
            firstColumn: true,
            lastColumn: false,
            numberOfHeaders: 1,
            bandedRows: true,
            bandedColumns: false,
            styleId: "TableStyleLight9",
          },
        },
      ],
      areGridLinesVisible: true,
      isVisible: true,
      headerGroups: {
        ROW: [],
        COL: [],
      },
    },
    {
      id: "pivot",
      name: "Pivot",
      colNumber: 26,
      rowNumber: 100,
      rows: {},
      cols: {
        0: {
          size: 127,
        },
        1: {
          size: 191,
        },
        2: {
          size: 102,
        },
        3: {
          size: 221,
        },
        4: {
          size: 93,
        },
        5: {
          size: 118,
        },
        6: {
          size: 95,
        },
        7: {
          size: 73,
        },
      },
      merges: [],
      cells: {
        A1: "Created on",
        A2: "45385.355219907404",
        A3: "45385.371712962966",
        A4: "45385.370416666665",
        A5: "45384.24826388889",
        A6: "45379.20659722222",
        A7: "45384.24826388889",
        A8: "45384.24826388889",
        A9: "45378.20659722222",
        A10: "45383.24826388889",
        A11: "45384.24826388889",
        A12: "45385.35695601852",
        A13: "45325.20659722222",
        A14: "45354.20659722222",
        A15: "45377.20659722222",
        A16: "45378.20659722222",
        A17: "45378.20659722222",
        A18: "45382.24826388889",
        A19: "45384.24826388889",
        A20: "45384.24826388889",
        A21: "45378.20659722222",
        A22: "45378.20659722222",
        A25: '=PIVOT("1")',
        B1: "Opportunity",
        B2: "Alice's opportunity",
        B3: "Roger's opportunity",
        B4: "interested in tables",
        B5: "Interest in your products",
        B6: "Open Space Design",
        B7: "Modern Open Space",
        B8: "Office Design and Architecture",
        B9: "Distributor Contract",
        B10: "Furnitures",
        B11: "Office Design Project",
        B12: "Roger's opportunity",
        B13: "Quote for 600 Chairs",
        B14: "Devis pour 150 tapis",
        B15: "5 VP Chairs",
        B16: "Customizable Desk",
        B17: "10 Computer Desks",
        B18: "Potential Distributor",
        B19: "Info about services",
        B20: "Quote for 12 Tables",
        B21: "Need 20 Desks",
        B22: "Access to Online Catalog",
        C1: "Contact Name",
        C2: "Alice",
        C4: "Charlie",
        C7: "Roger",
        C9: "Kevin",
        C10: "Robin",
        C13: "Erik",
        C14: "Erik",
        C15: "Benjamin",
        C16: "Eden",
        C17: "Carlos",
        C18: "Fernando",
        C20: "Charles",
        D1: "Email",
        D2: "admin@yourcompany.example.com",
        D3: "info@yourcompany.example.com",
        D4: "charlie@example.com",
        D5: "info@mycompany.com",
        D6: "info@mycompany.com",
        D7: "henry@info.com",
        D8: "info@example.com",
        D9: "john@tech.info",
        D10: "info@example.com",
        D11: "info@mycompany.com",
        D12: "roger@yourcompany.example.com",
        D13: "erik@test.com",
        D14: "erik@test.com",
        D15: "roger@yourcompany.example.com",
        D16: "roger@yourcompany.example.com",
        D17: "info@example.com",
        D18: "olivier@inc.sa",
        D19: "info@mycompany.com",
        D20: "will@example.com",
        D21: "info@mycompany.net",
        D22: "charles@example.com",
        E1: "Salesperson",
        E2: "Alice",
        E3: "Alice",
        E4: "Alice",
        E5: "Bob",
        E6: "Bob",
        E7: "Alice",
        E8: "Alice",
        E9: "Alice",
        E10: "Alice",
        E11: "Bob",
        E12: "Alice",
        E13: "Alice",
        E14: "Alice",
        E15: "Alice",
        E16: "Bob",
        E17: "Bob",
        E18: "Bob",
        E19: "Alice",
        E20: "Alice",
        E21: "Alice",
        E22: "Bob",
        F1: "Expected Revenue",
        F5: "2000",
        F6: "11000",
        F7: "4500",
        F8: "9000",
        F9: "19800",
        F10: "3800",
        F11: "24000",
        F13: "22500",
        F14: "40000",
        F15: "5600",
        F16: "15000",
        F17: "35000",
        F18: "1000",
        F19: "25000",
        F20: "40000",
        F21: "60000",
        F22: "2000",
        G1: "Expected MRR",
        G7: "333.33",
        H1: "Stage",
        H2: "New",
        H3: "New",
        H4: "New",
        H5: "Won",
        H6: "Proposition",
        H7: "Won",
        H8: "Proposition",
        H9: "Won",
        H10: "Qualified",
        H11: "New",
        H12: "New",
        H13: "Qualified",
        H14: "New",
        H15: "Proposition",
        H16: "Proposition",
        H17: "Qualified",
        H18: "Qualified",
        H19: "Qualified",
        H20: "New",
        H21: "Proposition",
        H22: "Won",
        I1: "Active",
        I2: "TRUE",
        I3: "TRUE",
        I4: "TRUE",
        I5: "TRUE",
        I6: "TRUE",
        I7: "TRUE",
        I8: "TRUE",
        I9: "TRUE",
        I10: "TRUE",
        I11: "TRUE",
        I12: "FALSE",
        I13: "FALSE",
        I14: "FALSE",
        I15: "FALSE",
        I16: "FALSE",
        I17: "FALSE",
        I18: "FALSE",
        I19: "FALSE",
        I20: "FALSE",
        I21: "FALSE",
        I22: "FALSE",
        K1: "Commissions",
        K2: "Alice",
        K3: "Bob",
        L2: "0.01",
        L3: "0.02",
      },
      styles: {
        "A1:I1": 11,
        K1: 11,
      },
      formats: {
        "L2:L3": 1,
        "A2:A22": 5,
        "F5:F11": 6,
        "F13:F22": 6,
        G7: 6,
      },
      borders: {},
      conditionalFormats: [],
      dataValidationRules: [],
      figures: [],
      tables: [
        {
          range: "A1:I22",
          type: "static",
          config: {
            hasFilters: true,
            totalRow: false,
            firstColumn: false,
            lastColumn: false,
            numberOfHeaders: 1,
            bandedRows: false,
            bandedColumns: false,
            styleId: "TableStyleLight12",
          },
        },
        {
          range: "A25",
          type: "dynamic",
          config: {
            hasFilters: false,
            totalRow: true,
            firstColumn: true,
            lastColumn: false,
            numberOfHeaders: 1,
            bandedRows: true,
            bandedColumns: false,
            styleId: "TableStyleMedium5",
          },
        },
      ],
      areGridLinesVisible: true,
      isVisible: true,
      color: "#FF9900",
      headerGroups: {
        ROW: [],
        COL: [],
      },
    },
    {
      id: "cf",
      name: "Conditional Formats",
      colNumber: 26,
      rowNumber: 100,
      rows: {},
      cols: {},
      merges: [],
      cells: {
        A1: "Data Bar",
        A3: "100",
        A4: "90",
        A5: "80",
        A6: "70",
        A7: "60",
        A8: "50",
        A9: "40",
        A10: "30",
        A11: "20",
        A12: "10",
        A13: "0",
        B1: "Data Bar based on range A3:A13",
        B3: "Lorem",
        B4: "ipsmum",
        B5: "dolor",
        B6: "sit",
        B7: "amet",
        B8: "consectetur",
        B9: "adipiscing",
        B10: "elit",
        B11: "Suspendisse",
        B12: "vitae",
        B13: "placerat",
      },
      styles: {},
      formats: {},
      borders: {},
      conditionalFormats: [
        {
          id: "1",
          ranges: ["A3:A13"],
          rule: {
            type: "DataBarRule",
            color: "#CFE2F3",
          },
        },
        {
          id: "2",
          ranges: ["B3:B13"],
          rule: {
            type: "DataBarRule",
            color: "#FCE5CD",
            rangeValues: "A3:A13",
          },
        },
      ],
      dataValidationRules: [],
      figures: [],
      tables: [],
      areGridLinesVisible: true,
      isVisible: true,
      headerGroups: {
        ROW: [],
        COL: [],
      },
    },
  ],
  styles: {
    1: {
      bold: true,
      textColor: "#674EA7",
      fontSize: 18,
    },
    2: {
      fillColor: "#FFF2CC",
    },
    3: {
      fillColor: "#D9EAD3",
    },
    4: {
      fillColor: "#B6D7A8",
    },
    5: {
      italic: true,
    },
    6: {
      strikethrough: true,
    },
    7: {
      underline: true,
    },
    8: {
      fillColor: "#d9d2e9",
    },
    9: {
      fillColor: "#000000",
    },
    10: {
      bold: true,
      fontSize: 11,
    },
    11: {
      bold: true,
    },
  },
  formats: {
    1: "0.00%",
    2: "#,##0.00",
    3: "m/d/yyyy",
    4: "hh:mm:ss a",
    5: "d/m/yyyy",
    6: "[$$]#,##0.00",
    7: '$#,##0,,"K"',
  },
  borders: {
    1: {
      bottom: {
        style: "thin",
        color: "#000",
      },
    },
    2: {
      top: {
        style: "thin",
        color: "#000",
      },
    },
    3: {
      bottom: {
        style: "thin",
        color: "#000",
      },
      right: {
        style: "thin",
        color: "#000",
      },
    },
    4: {
      top: {
        style: "thin",
        color: "#000",
      },
      right: {
        style: "thin",
        color: "#000",
      },
    },
    5: {
      right: {
        style: "thin",
        color: "#000",
      },
    },
    6: {
      bottom: {
        style: "thin",
        color: "#000",
      },
      left: {
        style: "thin",
        color: "#000",
      },
    },
    7: {
      top: {
        style: "thin",
        color: "#000",
      },
      left: {
        style: "thin",
        color: "#000",
      },
    },
    8: {
      left: {
        style: "thin",
        color: "#000",
      },
    },
    9: {
      bottom: {
        style: "thin",
        color: "#000",
      },
      left: {
        style: "thin",
        color: "#000",
      },
      right: {
        style: "thin",
        color: "#000",
      },
    },
    10: {
      top: {
        style: "thin",
        color: "#000",
      },
      left: {
        style: "thin",
        color: "#000",
      },
      right: {
        style: "thin",
        color: "#000",
      },
    },
    11: {
      left: {
        style: "thin",
        color: "#000",
      },
      right: {
        style: "thin",
        color: "#000",
      },
    },
    12: {
      top: {
        style: "thin",
        color: "#000",
      },
      bottom: {
        style: "thin",
        color: "#000",
      },
    },
    13: {
      top: {
        style: "thin",
        color: "#000",
      },
      bottom: {
        style: "thin",
        color: "#000",
      },
      left: {
        style: "thin",
        color: "#000",
      },
      right: {
        style: "thin",
        color: "#000",
      },
    },
    14: {
      right: {
        style: "medium",
        color: "#000",
      },
    },
    15: {
      left: {
        style: "thin",
        color: "#000",
      },
      right: {
        style: "thick",
        color: "#000",
      },
    },
    16: {
      right: {
        style: "dashed",
        color: "#000",
      },
    },
    17: {
      left: {
        style: "thin",
        color: "#000",
      },
      right: {
        style: "dotted",
        color: "#000",
      },
    },
    18: {
      top: {
        style: "thin",
        color: "#000",
      },
      bottom: {
        style: "medium",
        color: "#000",
      },
    },
    19: {
      top: {
        style: "medium",
        color: "#000",
      },
      bottom: {
        style: "medium",
        color: "#000",
      },
      left: {
        style: "medium",
        color: "#000",
      },
      right: {
        style: "medium",
        color: "#000",
      },
    },
    20: {
      top: {
        style: "medium",
        color: "#000",
      },
      bottom: {
        style: "thick",
        color: "#000",
      },
    },
    21: {
      top: {
        style: "thick",
        color: "#000",
      },
      bottom: {
        style: "thick",
        color: "#000",
      },
      left: {
        style: "thick",
        color: "#000",
      },
      right: {
        style: "thick",
        color: "#000",
      },
    },
    22: {
      top: {
        style: "thick",
        color: "#000",
      },
      bottom: {
        style: "dashed",
        color: "#000",
      },
    },
    23: {
      top: {
        style: "dashed",
        color: "#000",
      },
      bottom: {
        style: "dashed",
        color: "#000",
      },
      left: {
        style: "dashed",
        color: "#000",
      },
      right: {
        style: "dashed",
        color: "#000",
      },
    },
    24: {
      top: {
        style: "dashed",
        color: "#000",
      },
      bottom: {
        style: "dotted",
        color: "#000",
      },
    },
    25: {
      top: {
        style: "dotted",
        color: "#000",
      },
      bottom: {
        style: "dotted",
        color: "#000",
      },
      left: {
        style: "dotted",
        color: "#000",
      },
      right: {
        style: "dotted",
        color: "#000",
      },
    },
    26: {
      top: {
        style: "dotted",
        color: "#000",
      },
    },
    27: {
      left: {
        style: "thin",
        color: "#000",
      },
      right: {
        style: "thin",
        color: "#FF0000",
      },
    },
    28: {
      left: {
        style: "medium",
        color: "#000",
      },
    },
    29: {
      left: {
        style: "thick",
        color: "#000",
      },
    },
    30: {
      left: {
        style: "dashed",
        color: "#000",
      },
    },
    31: {
      left: {
        style: "dotted",
        color: "#000",
      },
    },
    32: {
      bottom: {
        style: "thick",
        color: "#00FF00",
      },
    },
    33: {
      top: {
        style: "thick",
        color: "#00FF00",
      },
      bottom: {
        style: "dotted",
        color: "#0000FF",
      },
      left: {
        style: "thin",
        color: "#FF0000",
      },
      right: {
        style: "dashed",
        color: "#93C47D",
      },
    },
    34: {
      top: {
        style: "dotted",
        color: "#0000FF",
      },
    },
    35: {
      left: {
        style: "dashed",
        color: "#93C47D",
      },
    },
  },
  revisionId: "START_REVISION",
  uniqueFigureIds: true,
  settings: {
    locale: {
      name: "English (US)",
      code: "en_US",
      thousandsSeparator: ",",
      decimalSeparator: ".",
      dateFormat: "m/d/yyyy",
      timeFormat: "hh:mm:ss a",
      formulaArgSeparator: ",",
      weekStart: 7,
    },
  },
  pivots: {
    1: {
      type: "SPREADSHEET",
      columns: [
        {
          fieldName: "Stage",
        },
      ],
      rows: [
        {
          fieldName: "Salesperson",
          order: "asc",
        },
      ],
      measures: [
        {
          id: "Expected Revenue:sum",
          fieldName: "Expected Revenue",
          aggregator: "sum",
        },
        {
          id: "Commission",
          fieldName: "Commission",
          aggregator: "sum",
          userDefinedName: "Commission",
          computedBy: {
            sheetId: "pivot",
            formula: "='Expected Revenue:sum'*VLOOKUP(Salesperson,K2:L3,2,0)",
          },
        },
      ],
      name: "My pivot",
      dataSet: {
        sheetId: "pivot",
        zone: {
          top: 0,
          bottom: 21,
          left: 0,
          right: 8,
        },
      },
      formulaId: "1",
    },
  },
  pivotNextId: 2,
  customTableStyles: {},
};

// Performance dataset
function _getColumnLetter(number) {
  return number !== -1
    ? _getColumnLetter(Math.floor(number / 26) - 1) + String.fromCharCode(65 + (number % 26))
    : "";
}

function computeFormulaCells(cols, rows) {
  const cells = {};
  for (let row = 4; row <= rows; row++) {
    cells[`A${row}`] = { content: row.toString() };
    for (let col = 1; col < cols; col++) {
      const colLetter = _getColumnLetter(col);
      const prev = _getColumnLetter(col - 1);
      cells[colLetter + row] = {
        content: `=${prev}${row}+1`,
      };
    }
  }
  const letter = _getColumnLetter(cols);
  const nextLetter = _getColumnLetter(cols + 1);
  for (let i = 3; i < cols; i++) {
    cells[nextLetter + i] = {
      content: `=SUM(A${i}:${letter}${i})`,
    };
  }
  return cells;
}

function computeArrayFormulaCells(cols, rows) {
  const cells = {};
  const initRow = 4;
  for (let row = initRow; row <= rows; row++) {
    cells[`A${row}`] = { content: row.toString() };
  }
  for (let col = 1; col < cols; col++) {
    const colLetter = _getColumnLetter(col);
    const prev = _getColumnLetter(col - 1);
    cells[colLetter + initRow] = {
      content: `=transpose(transpose(${prev}${initRow}:${prev}${rows}))`,
    };
  }
  return cells;
}

function computeVectorizedFormulaCells(cols, rows) {
  const cells = {};
  const initRow = 4;
  for (let row = initRow; row <= rows; row++) {
    cells[`A${row}`] = { content: row.toString() };
  }
  for (let col = 1; col < cols; col++) {
    const colLetter = _getColumnLetter(col);
    const prev = _getColumnLetter(col - 1);
    cells[colLetter + initRow] = {
      content: `=${prev}${initRow}:${prev}${rows}+1`,
    };
  }
  const letter = _getColumnLetter(cols);
  const nextLetter = _getColumnLetter(cols + 1);
  for (let i = 3; i < cols; i++) {
    cells[nextLetter + i] = {
      content: `=SUM(A${i}:${letter}${i})`,
    };
  }
  return cells;
}

function computeNumberCells(cols, rows, type = "numbers") {
  const cells = {};
  for (let col = 0; col < cols; col++) {
    const letter = _getColumnLetter(col);
    for (let index = 1; index < rows - 1; index++) {
      switch (type) {
        case "numbers":
          cells[letter + index] = { content: `${col + index}` };
          break;
        case "floats":
          cells[letter + index] = { content: `${col + index}.123` };
          break;
        case "longFloats":
          cells[letter + index] = { content: `${col + index}.123456789123456` };
          break;
      }
    }
  }
  return cells;
}

function computeStringCells(cols, rows) {
  const cells = {};
  for (let col = 0; col < cols; col++) {
    const letter = _getColumnLetter(col);
    for (let index = 1; index < rows; index++) {
      cells[letter + index] = { content: Math.random().toString(36).slice(2) };
    }
  }
  return cells;
}

/**
 *
 * @param {*} cols
 * @param {*} rows
 * @param {*} sheetsInfo ("numbers"|"strings"|"formulas")[]>
 * @returns
 */
export function makeLargeDataset(cols, rows, sheetsInfo = ["formulas"]) {
  const sheets = [];
  let cells;
  for (let index = 0; index < sheetsInfo.length; index++) {
    switch (sheetsInfo[index]) {
      case "formulas":
        cells = computeFormulaCells(cols, rows);
        break;
      case "arrayFormulas":
        cells = computeArrayFormulaCells(cols, rows);
        break;
      case "vectorizedFormulas":
        cells = computeVectorizedFormulaCells(cols, rows);
        break;
      case "numbers":
      case "floats":
      case "longFloats":
        cells = computeNumberCells(cols, rows, sheetsInfo[0]);
        break;
      case "strings":
        cells = computeStringCells(cols, rows);
    }
    sheets.push({
      name: `Sheet${index + 1}`,
      colNumber: cols,
      rowNumber: rows,
      cols: { 1: {}, 3: {} }, // ?
      rows: {},
      cells,
    });
  }
  return {
    version: 10,
    sheets,
    styles: {
      1: { bold: true, textColor: "#674EA7", fontSize: 12 },
      2: { italic: true },
      3: { strikethrough: true },
      4: { fillColor: "#FFF2CC" },
      5: { fillColor: "#D9EAD3" },
      6: { fillColor: "#B6D7A8" },
    },
    borders: {},
  };
}
