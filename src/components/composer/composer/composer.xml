<templates>
  <t t-name="o-spreadsheet-Composer">
    <div class="o-composer-container w-100 h-100">
      <div
        class="o-composer w-100 text-start"
        t-att-class="{ 'text-muted': env.model.getters.isReadonly(), 'active': props.focus !== 'inactive' }"
        t-att-style="props.inputStyle"
        t-ref="o_composer"
        tabindex="1"
        t-att-contenteditable="env.model.getters.isReadonly() ? 'false' : 'true'"
        spellcheck="false"
        t-on-keydown="onKeydown"
        t-on-mousewheel.stop=""
        t-on-input="onInput"
        t-on-pointerdown="onMousedown"
        t-on-click="onClick"
        t-on-keyup="onKeyup"
        t-on-paste="onPaste"
        t-on-compositionstart="onCompositionStart"
        t-on-compositionend="onCompositionEnd"
        t-on-dblclick="onDblClick"
        t-on-contextmenu="onContextMenu"
      />

      <div
        t-if="props.focus !== 'inactive' and (autoCompleteState.provider or functionDescriptionState.showDescription)"
        class="o-composer-assistant shadow"
        t-att-style="assistantStyle"
        t-on-wheel.stop=""
        t-on-pointerdown.prevent.stop=""
        t-on-click.prevent.stop=""
        t-on-pointerup.prevent.stop="">
        <TextValueProvider
          t-if="autoCompleteState.provider"
          proposals="autoCompleteState.provider.proposals"
          selectedIndex="autoCompleteState.selectedIndex"
          onValueSelected.bind="this.autoComplete"
          onValueHovered.bind="this.updateAutoCompleteIndex"
        />
        <FunctionDescriptionProvider
          t-if="functionDescriptionState.showDescription"
          functionName="functionDescriptionState.functionName"
          functionDescription="functionDescriptionState.functionDescription"
          argToFocus="functionDescriptionState.argToFocus"
        />
      </div>
    </div>
  </t>
</templates>
