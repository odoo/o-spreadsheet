<templates>
  <t t-name="o-spreadsheet-Grid" owl="1">
    <div
      class="o-grid"
      t-att-class="{'o-two-columns': !props.sidePanelIsOpen}"
      t-on-click="focus"
      t-on-keydown="onKeydown"
      t-on-wheel="onMouseWheel"
      t-ref="grid">
      <!-- tabindex="-1" is necessary to keep the focus on composer while selecting a cell -->
      <div
        t-ref="gridOverlay"
        tabindex="-1"
        class="o-grid-overlay"
        t-att-style="gridOverlayStyle"
        t-on-mousedown="onMouseDown"
        t-on-dblclick="onDoubleClick"
        t-on-contextmenu="onCanvasContextMenu">
        <FiguresContainer
          model="props.model"
          sidePanelIsOpen="props.sidePanelIsOpen"
          onFigureDeleted="() => this.focus()"
        />
      </div>
      <HeadersOverlay
        t-if="!env.isDashboard()"
        onOpenContextMenu="(type, x, y) => this.toggleContextMenu(type, x, y)"
      />

      <t t-if="env.model.getters.getEditionMode() !== 'inactive' and !env.isDashboard()">
        <GridComposer
          onComposerUnmounted="() => this.focus()"
          onComposerContentFocused="props.onComposerContentFocused"
          focus="props.focusComposer"
        />
      </t>
      <canvas t-ref="canvas"/>
      <t
        t-if="!env.isDashboard()"
        t-foreach="env.model.getters.getClientsToDisplay()"
        t-as="client"
        t-key="getClientPositionKey(client)">
        <ClientTag
          name="client.name"
          color="client.color"
          col="client.position.col"
          row="client.position.row"
          active="isCellHovered(client.position.col, client.position.row)"
        />
      </t>
      <Popover
        t-if="cellPopover.isOpen"
        position="cellPopover.coordinates"
        childWidth="cellPopover.Component.size.width"
        childHeight="cellPopover.Component.size.height"
        flipHorizontalOffset="cellPopover.cellWidth"
        flipVerticalOffset="cellPopover.cellHeight"
        onMouseWheel="onMouseWheel.bind(this)">
        <t
          t-component="cellPopover.Component"
          t-props="{...cellPopover.props, onClosed : () => onClosePopover()}"
        />
      </Popover>
      <t
        t-if="env.model.getters.getEditionMode() === 'inactive' and isAutoFillActive() and !env.isDashboard()">
        <Autofill
          position="getAutofillPosition()"
          getGridBoundingClientRect="() => this.getGridBoundingClientRect()"
        />
      </t>
      <t t-if="env.model.getters.getEditionMode() !== 'inactive' and !env.isDashboard()">
        <t t-foreach="env.model.getters.getHighlights()" t-as="highlight" t-key="highlight_index">
          <t t-if="highlight.sheetId === env.model.getters.getActiveSheetId()">
            <Highlight zone="highlight.zone" color="highlight.color"/>
          </t>
        </t>
      </t>
      <Menu
        t-if="menuState.isOpen"
        menuItems="menuState.menuItems"
        position="menuState.position"
        onClose="() => this.closeMenu()"
      />
      <t t-set="gridSize" t-value="env.model.getters.getMainViewportRect()"/>
      <div
        class="o-scrollbar vertical"
        t-on-scroll="onScroll"
        t-ref="vscrollbar"
        t-att-style="vScrollbarStyle">
        <div t-attf-style="width:1px;height:{{gridSize.height}}px"/>
      </div>
      <div
        class="o-scrollbar horizontal"
        t-on-scroll="onScroll"
        t-ref="hscrollbar"
        t-att-style="hScrollbarStyle">
        <div t-attf-style="height:1px;width:{{gridSize.width}}px"/>
      </div>
      <div class="o-scrollbar corner"/>
    </div>
  </t>
</templates>
