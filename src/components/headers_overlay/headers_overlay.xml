<templates>
  <t t-name="o-spreadsheet-HeadersOverlay">
    <div class="o-overlay">
      <ColResizer onOpenContextMenu="props.onOpenContextMenu"/>
      <RowResizer onOpenContextMenu="props.onOpenContextMenu"/>
      <div class="all" t-on-pointerdown.self="selectAll"/>
    </div>
  </t>

  <t t-name="o-spreadsheet-RowResizer">
    <div
      class="o-row-resizer o-zoomable"
      t-ref="rowResizer"
      t-on-pointermove.self="onMouseMove"
      t-on-mouseleave="onMouseLeave"
      t-on-pointerdown.self.prevent="select"
      t-on-click="onClick"
      t-on-pointerup.self="onMouseUp"
      t-on-contextmenu.self="onContextMenu"
      t-att-class="{'o-grab': state.waitingForMove, 'o-dragging': state.isMoving}">
      <div
        t-if="state.isMoving"
        class="dragging-row-line"
        t-attf-style="top:{{state.draggerLinePosition}}px;"
      />
      <div
        t-if="state.isMoving"
        class="dragging-row-shadow"
        t-attf-style="top:{{state.draggerShadowPosition}}px; height:{{state.draggerShadowThickness}}px;"
      />
      <t t-if="state.resizerIsActive">
        <div
          class="o-handle"
          t-on-pointerdown="onMouseDown"
          t-on-dblclick="onDblClick"
          t-on-contextmenu.prevent=""
          t-attf-style="top:{{state.draggerLinePosition - 2}}px;">
          <div class="dragging-resizer" t-if="state.isResizing"/>
        </div>
      </t>
      <t t-if="env.model.getters.getHiddenRowsGroups(sheetId).length">
        <t t-if="hasFrozenPane">
          <div class="position-relative pe-none overflow-hidden" t-att-style="frozenContainerStyle">
            <UnhideRowHeaders t-props="frozenUnhideHeadersProps"/>
          </div>
        </t>
        <div class="pe-none overflow-hidden flex-shrink-0 position-relative h-100">
          <UnhideRowHeaders t-props="mainUnhideHeadersProps"/>
        </div>
      </t>
    </div>
  </t>

  <t t-name="o-spreadsheet-ColResizer">
    <div
      class="o-col-resizer d-flex o-zoomable"
      t-ref="colResizer"
      t-on-pointermove.self="onMouseMove"
      t-on-mouseleave="onMouseLeave"
      t-on-pointerdown.self.prevent="select"
      t-on-click="onClick"
      t-on-pointerup.self="onMouseUp"
      t-on-contextmenu.self="onContextMenu"
      t-att-class="{'o-grab': state.waitingForMove, 'o-dragging': state.isMoving, }">
      <div
        t-if="state.isMoving"
        class="dragging-col-line"
        t-attf-style="left:{{state.draggerLinePosition}}px;"
      />
      <div
        t-if="state.isMoving"
        class="dragging-col-shadow"
        t-attf-style="left:{{state.draggerShadowPosition}}px; width:{{state.draggerShadowThickness}}px"
      />
      <t t-if="state.resizerIsActive">
        <div
          class="o-handle"
          t-on-pointerdown="onMouseDown"
          t-on-dblclick="onDblClick"
          t-on-contextmenu.prevent=""
          t-attf-style="left:{{state.draggerLinePosition - 2}}px;">
          <div class="dragging-resizer" t-if="state.isResizing"/>
        </div>
      </t>
      <t t-if="env.model.getters.getHiddenColsGroups(sheetId).length">
        <t t-if="hasFrozenPane">
          <div
            class="position-relative pe-none h-100 flex-shrink-0"
            t-att-style="frozenContainerStyle">
            <UnhideColumnHeaders t-props="frozenUnhideHeadersProps"/>
          </div>
        </t>
        <div class="pe-none overflow-hidden flex-shrink-0 position-relative w-100">
          <UnhideColumnHeaders t-props="mainUnhideHeadersProps"/>
        </div>
      </t>
    </div>
  </t>
</templates>
