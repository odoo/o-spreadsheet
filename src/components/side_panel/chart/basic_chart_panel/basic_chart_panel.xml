<templates>
  <t t-name="o-spreadsheet.BasicChartPanel" owl="1">
    <div class="o-chart">
      <div class="o-panel">
        <div
          class="o-panel-element"
          t-att-class="state.panel !== 'configuration' ? 'inactive' : ''"
          t-on-click="() => this.activate('configuration')">
          <i class="fa fa-sliders"/>
          Configuration
        </div>
        <div
          class="o-panel-element"
          t-att-class="state.panel !== 'design' ? 'inactive' : ''"
          t-on-click="() => this.activate('design')">
          <i class="fa fa-paint-brush"/>
          Design
        </div>
      </div>

      <t t-if="state.panel === 'configuration'">
        <t t-call="o-spreadsheet.BasicChartConfigurationPanel"/>
      </t>
      <t t-else="">
        <t t-call="o-spreadsheet.BasicChartDesignPanel"/>
      </t>
    </div>
  </t>

  <t t-name="o-spreadsheet.BasicChartConfigurationPanel" owl="1">
    <div>
      <div class="o-section">
        <div class="o-section-title">Chart type</div>
        <ChartTypeSelect figureId="this.props.figure.id" onTypeChange.bind="updateChartType"/>
        <t t-if="chartType === 'bar'">
          <div class="o_checkbox">
            <input
              type="checkbox"
              name="stackedBar"
              t-model="state.chart.stackedBar"
              t-on-change="updateStacked"
            />
            Stacked barchart
          </div>
        </t>
      </div>
      <div class="o-section o-data-series">
        <div class="o-section-title">Data Series</div>
        <SelectionInput
          t-key="getKey('dataSets')"
          ranges="state.chart.dataSets"
          isInvalid="isDatasetInvalid"
          required="true"
          onSelectionChanged="(ranges) => this.onSeriesChanged(ranges)"
          onSelectionConfirmed="() => this.updateDataSet()"
        />
        <input
          type="checkbox"
          t-model="state.chart.dataSetsHaveTitle"
          t-on-change="() => this.updateDataSet()"
        />
        Data series include title
      </div>
      <div class="o-section o-data-labels">
        <div class="o-section-title">Categories / Labels</div>
        <SelectionInput
          t-key="getKey('label')"
          ranges="[state.chart.labelRange || '']"
          isInvalid="isLabelInvalid"
          hasSingleRange="true"
          onSelectionChanged="(ranges) => this.onLabelRangeChanged(ranges)"
          onSelectionConfirmed="() => this.updateLabelRange()"
        />
        <div t-if="canTreatLabelsAsText()">
          <input
            type="checkbox"
            name="labelsAsText"
            t-model="state.chart.labelsAsText"
            t-on-change="updateLabelsAsText"
          />
          Treat labels as text
        </div>
      </div>
      <div class="o-section o-sidepanel-error" t-if="errorMessages">
        <div t-foreach="errorMessages" t-as="error" t-key="error">
          <t t-esc="error"/>
        </div>
      </div>
    </div>
  </t>

  <t t-name="o-spreadsheet.BasicChartDesignPanel" owl="1">
    <div>
      <div class="o-section o-chart-title">
        <div class="o-section-title">Background color</div>
        <div class="o-with-color-picker">
          Select a color...
          <span
            t-attf-style="border-color:{{state.chart.background}}"
            t-on-click.stop="toggleColorPicker">
            <t t-call="o-spreadsheet.Icon.FILL_COLOR"/>
          </span>
          <ColorPicker
            t-if="state.fillColorTool"
            onColorPicked="(color) => this.setColor(color)"
            t-key="backgroundColor"
          />
        </div>
      </div>
      <div class="o-section o-chart-title">
        <div class="o-section-title">Title</div>
        <input
          type="text"
          t-model="state.chart.title"
          t-on-change="updateTitle"
          class="o-input"
          placeholder="New Chart"
        />
      </div>
      <div class="o-section">
        <div class="o-section-title">Vertical axis position</div>
        <select
          t-model="state.chart.verticalAxisPosition"
          class="o-input o-type-selector"
          t-on-change="(ev) => this.updateSelect('verticalAxisPosition', ev)">
          <option value="left">Left</option>
          <option value="right">Right</option>
        </select>
      </div>
      <div class="o-section">
        <div class="o-section-title">LegendPosition</div>
        <select
          t-model="state.chart.legendPosition"
          class="o-input o-type-selector"
          t-on-change="(ev) => this.updateSelect('legendPosition', ev)">
          <option value="top">Top</option>
          <option value="bottom">Bottom</option>
          <option value="left">Left</option>
          <option value="right">Right</option>
        </select>
      </div>
    </div>
  </t>
</templates>
