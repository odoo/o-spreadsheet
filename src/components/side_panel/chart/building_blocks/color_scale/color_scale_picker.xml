<templates>
  <t t-name="o-spreadsheet-ColorScalePicker">
    <Section class="'pt-0 o-color-scale'" title.translate="Color Scale">
      <div class="w-100" style="position:relative">
        <div
          class="color-scale-container d-flex justify-content-end"
          t-on-click.stop="onPointerDown">
          <span class="color-scale-label">
            <t t-esc="currentColorScaleLabel"/>
          </span>
          <div
            class="color-scale-preview w-100"
            t-att-class="currentColorScalePreview"
            t-att-style="currentColorScaleStyle"
          />
          <span class="ms-1">
            <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
          </span>
        </div>
        <Popover t-if="state.popoverProps" t-props="state.popoverProps">
          <div t-ref="popoverRef" class="bg-white" t-att-style="state.popoverStyle">
            <div
              class="color-scale-container d-flex justify-content-end custom-color-scale-container"
              t-on-click="() => this.onColorScaleChange('custom')">
              <span class="color-scale-label">Custom</span>
              <div class="color-scale-preview custom-color-scale"/>
            </div>
            <t t-foreach="colorScales" t-as="colorScale" t-key="colorScale.value">
              <div
                class="color-scale-container d-flex justify-content-end"
                t-on-click="() => this.onColorScaleChange(colorScale.value)"
                t-att-title="colorScale.label">
                <span class="color-scale-label">
                  <t t-esc="colorScale.label"/>
                </span>
                <div
                  class="color-scale-preview"
                  t-att-class="colorScale.className"
                  t-att-style="colorScalePreviewStyle(colorScale.value)"
                />
              </div>
            </t>
          </div>
        </Popover>
      </div>
      <t t-if="customColorScale">
        <div class="o-min-color d-flex align-items-center mb-2 mt-2 ms-2">
          <RoundColorPicker
            currentColor="getCustomColorScaleColor('minColor')"
            onColorPicked="(color) => this.setCustomColorScaleColor('minColor', color)"
            disableNoColor="true"
          />
          <span class="ps-2">Color of minimum values</span>
        </div>
        <div class="o-mid-color d-flex align-items-center mb-2 ms-2">
          <RoundColorPicker
            currentColor="getCustomColorScaleColor('midColor')"
            onColorPicked="(color) => this.setCustomColorScaleColor('midColor', color)"
          />
          <span class="ps-2">Color of middle values</span>
        </div>
        <div class="o-max-color d-flex align-items-center ms-2">
          <RoundColorPicker
            currentColor="getCustomColorScaleColor('maxColor')"
            onColorPicked="(color) => this.setCustomColorScaleColor('maxColor', color)"
            disableNoColor="true"
          />
          <span class="ps-2">Color of maximum values</span>
        </div>
      </t>
    </Section>
  </t>
</templates>
