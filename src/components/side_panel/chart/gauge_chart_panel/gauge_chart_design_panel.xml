<templates>
  <t t-name="o-spreadsheet-GaugeChartDesignPanel">
    <GeneralDesignEditor
      figureId="props.figureId"
      definition="props.definition"
      updateChart="props.updateChart"
    />
    <SidePanelCollapsible collapsedAtInit="false" title.translate="Gauge Design">
      <t t-set-slot="content">
        <Section class="'pt-0'" title.translate="Range">
          <div class="o-subsection-left">
            <StandaloneComposer
              class="'o-data-range-min'"
              placeholder.translate="Value or formula"
              title.translate="Min value or formula"
              invalid="isRangeMinInvalid"
              composerContent="state.sectionRule.rangeMin"
              defaultRangeSheetId="sheetId"
              onConfirm="(str) => this.onConfirmGaugeRange('rangeMin', str)"
            />
          </div>
          <div class="o-subsection-right">
            <StandaloneComposer
              class="'o-data-range-max'"
              placeholder.translate="Value or formula"
              title.translate="Max value or formula"
              invalid="isRangeMaxInvalid"
              composerContent="state.sectionRule.rangeMax"
              defaultRangeSheetId="sheetId"
              onConfirm="(str) => this.onConfirmGaugeRange('rangeMax', str)"
            />
          </div>
        </Section>

        <Section title.translate="Thresholds">
          <t t-call="o-spreadsheet-GaugeChartColorSectionTemplate">
            <t t-set="sectionRule" t-value="state.sectionRule"/>
          </t>
        </Section>

        <ChartErrorSection t-if="designErrorMessages.length" messages="designErrorMessages"/>
      </t>
    </SidePanelCollapsible>
  </t>

  <t t-name="o-spreadsheet-GaugeChartColorSectionTemplate">
    <div class="o-gauge-color-set">
      <table>
        <tr>
          <th class="o-gauge-color-set-colorPicker"/>
          <th class="o-gauge-color-set-text"/>
          <th class="o-gauge-color-set-operator"/>
          <th class="o-gauge-color-set-value">Value</th>
          <th class="o-gauge-color-set-type">Type</th>
        </tr>

        <t t-call="o-spreadsheet-GaugeChartColorSectionTemplateRow">
          <t t-set="sectionColor" t-value="sectionRule.colors.lowerColor"/>
          <t t-set="sectionType" t-value="'lowerColor'"/>
          <t t-set="inflectionPoint" t-value="sectionRule.lowerInflectionPoint"/>
          <t t-set="isInvalid" t-value="isLowerInflectionPointInvalid"/>
          <t t-set="inflectionPointName" t-value="'lowerInflectionPoint'"/>
        </t>

        <t t-call="o-spreadsheet-GaugeChartColorSectionTemplateRow">
          <t t-set="sectionColor" t-value="sectionRule.colors.middleColor"/>
          <t t-set="sectionType" t-value="'middleColor'"/>
          <t t-set="inflectionPoint" t-value="sectionRule.upperInflectionPoint"/>
          <t t-set="isInvalid" t-value="isUpperInflectionPointInvalid"/>
          <t t-set="inflectionPointName" t-value="'upperInflectionPoint'"/>
        </t>

        <tr>
          <td>
            <RoundColorPicker
              currentColor="sectionRule.colors.upperColor"
              onColorPicked="(color) => this.updateSectionColor('upperColor', color)"
            />
          </td>
          <td>Else</td>
          <td/>
          <td/>
          <td/>
        </tr>
      </table>
    </div>
  </t>

  <t t-name="o-spreadsheet-GaugeChartColorSectionTemplateRow">
    <tr>
      <td>
        <RoundColorPicker
          currentColor="sectionColor"
          onColorPicked="(color) => this.updateSectionColor(sectionType, color)"
        />
      </td>
      <td>When value is</td>
      <td class="pe-2">
        <t t-set="below">below</t>
        <t t-set="belowOrEqualTo">below or equal to</t>
        <select
          class="o-input"
          name="operatorType"
          t-att-title="inflectionPoint.operator === '&lt;' ? below : belowOrEqualTo"
          t-model="inflectionPoint.operator"
          t-on-change="() => this.updateSectionRule(state.sectionRule)">
          <option title="below" value="&lt;">&lt;</option>
          <option title="below or equal to" value="&lt;=">&lt;=</option>
        </select>
      </td>
      <td class="pe-2">
        <StandaloneComposer t-props="getGaugeInflectionComposerProps(sectionType)"/>
      </td>
      <td>
        <select
          class="o-input"
          name="valueType"
          t-model="inflectionPoint.type"
          t-on-change="(ev) => this.updateSectionRule(state.sectionRule)">
          <option value="number">Number</option>
          <option value="percentage">Percentage</option>
        </select>
      </td>
    </tr>
  </t>
</templates>
