<templates>
  <t t-name="o-spreadsheet-GaugeChartDesignPanel">
    <GeneralDesignEditor
      figureId="props.figureId"
      definition="props.definition"
      updateChart="props.updateChart"
    />
    <SidePanelCollapsible collapsedAtInit="true">
      <t t-set-slot="title">Gauge Design</t>
      <t t-set-slot="content">
        <Section class="'pt-0'">
          <t t-set-slot="title">Range</t>
          <div class="o-subsection-left">
            <input
              type="text"
              t-model="state.sectionRule.rangeMin"
              t-on-change="() => this.updateSectionRule(state.sectionRule)"
              t-on-input="() => this.canUpdateSectionRule(state.sectionRule)"
              class="o-input o-data-range-min"
              t-att-class="{ 'o-invalid': isRangeMinInvalid() }"
            />
          </div>
          <div class="o-subsection-right">
            <input
              type="text"
              t-model="state.sectionRule.rangeMax"
              t-on-change="() => this.updateSectionRule(state.sectionRule)"
              t-on-input="() => this.canUpdateSectionRule(state.sectionRule)"
              class="o-input o-data-range-max"
              t-att-class="{ 'o-invalid': isRangeMaxInvalid() }"
            />
          </div>
        </Section>

        <Section>
          <t t-set-slot="title">Thresholds</t>
          <t t-call="o-spreadsheet-GaugeChartColorSectionTemplate">
            <t t-set="sectionRule" t-value="state.sectionRule"/>
          </t>
        </Section>

        <ChartErrorSection t-if="designErrorMessages.length" messages="designErrorMessages"/>
      </t>
    </SidePanelCollapsible>
  </t>

  <t t-name="o-spreadsheet-GaugeChartColorSectionTemplate">
    <div class="o-gauge-color-set">
      <table>
        <tr>
          <th class="o-gauge-color-set-colorPicker"/>
          <th class="o-gauge-color-set-text"/>
          <th class="o-gauge-color-set-value">Value</th>
          <th class="o-gauge-color-set-type">Type</th>
        </tr>

        <t t-call="o-spreadsheet-GaugeChartColorSectionTemplateRow">
          <t t-set="sectionColor" t-value="sectionRule.colors.lowerColor"/>
          <t t-set="sectionType" t-value="'lowerColor'"/>
          <t t-set="inflectionPoint" t-value="sectionRule.lowerInflectionPoint"/>
          <t t-set="isInvalid" t-value="isLowerInflectionPointInvalid"/>
          <t t-set="inflectionPointName" t-value="'lowerInflectionPoint'"/>
        </t>

        <t t-call="o-spreadsheet-GaugeChartColorSectionTemplateRow">
          <t t-set="sectionColor" t-value="sectionRule.colors.middleColor"/>
          <t t-set="sectionType" t-value="'middleColor'"/>
          <t t-set="inflectionPoint" t-value="sectionRule.upperInflectionPoint"/>
          <t t-set="isInvalid" t-value="isUpperInflectionPointInvalid"/>
          <t t-set="inflectionPointName" t-value="'upperInflectionPoint'"/>
        </t>

        <tr>
          <td>
            <RoundColorPicker
              currentColor="sectionRule.colors.upperColor"
              onColorPicked="(color) => this.updateSectionColor('upperColor', color)"
            />
          </td>
          <td>Else</td>
          <td/>
          <td/>
          <td/>
        </tr>
      </table>
    </div>
  </t>

  <t t-name="o-spreadsheet-GaugeChartColorSectionTemplateRow">
    <tr>
      <td>
        <RoundColorPicker
          currentColor="sectionColor"
          onColorPicked="(color) => this.updateSectionColor(sectionType, color)"
        />
      </td>
      <td>When value is below</td>
      <td>
        <input
          type="text"
          class="o-input"
          t-model="inflectionPoint.value"
          t-on-input="() => this.canUpdateSectionRule(state.sectionRule)"
          t-on-change="() => this.updateSectionRule(state.sectionRule)"
          t-attf-class="o-input-{{inflectionPointName}}"
          t-att-class="{ 'o-invalid': isInvalid }"
        />
      </td>
      <td>
        <select
          class="o-input"
          name="valueType"
          t-model="inflectionPoint.type"
          t-on-change="(ev) => this.updateSectionRule(state.sectionRule)">
          <option value="number">Number</option>
          <option value="percentage">Percentage</option>
        </select>
      </td>
    </tr>
  </t>
</templates>
