import { EventBus } from "@odoo/owl";
import { createAction, createActions } from "./actions/action";
import { transformRangeData, transformZone } from "./collaborative/ot/ot_helpers";
import { ActionButton } from "./components/action_button/action_button";
import { Ripple } from "./components/animation/ripple";
import { Autofill } from "./components/autofill/autofill";
import { BorderEditor } from "./components/border_editor/border_editor";
import { BorderEditorWidget } from "./components/border_editor/border_editor_widget";
import { BottomBar } from "./components/bottom_bar/bottom_bar";
import { BottomBarSheet } from "./components/bottom_bar_sheet/bottom_bar_sheet";
import { BottomBarStatistic } from "./components/bottom_bar_statistic/bottom_bar_statistic";
import { ClientTag } from "./components/collaborative_client_tag/collaborative_client_tag";
import { ColorPicker } from "./components/color_picker/color_picker";
import { ColorPickerWidget } from "./components/color_picker/color_picker_widget";
import { TextValueProvider } from "./components/composer/autocomplete_dropdown/autocomplete_dropdown";
import { Composer } from "./components/composer/composer/composer";
import { ContentEditableHelper } from "./components/composer/content_editable_helper";
import { FunctionDescriptionProvider } from "./components/composer/formula_assistant/formula_assistant";
import { GridComposer } from "./components/composer/grid_composer/grid_composer";
import { TopBarComposer } from "./components/composer/top_bar_composer/top_bar_composer";
import { SpreadsheetDashboard } from "./components/dashboard/dashboard";
import { DataValidationOverlay } from "./components/data_validation_overlay/data_validation_overlay";
import { DataValidationCheckbox } from "./components/data_validation_overlay/dv_checkbox/dv_checkbox";
import { DataValidationListIcon } from "./components/data_validation_overlay/dv_list_icon/dv_list_icon";
import { ErrorToolTip } from "./components/error_tooltip/error_tooltip";
import { ChartJsComponent } from "./components/figures/chart/chartJs/chartjs";
import { ScorecardChart } from "./components/figures/chart/scorecard/chart_scorecard";
import { FigureComponent } from "./components/figures/figure/figure";
import { ChartFigure } from "./components/figures/figure_chart/figure_chart";
import { FiguresContainer } from "./components/figures/figure_container/figure_container";
import { ImageFigure } from "./components/figures/figure_image/figure_image";
import { FilterIcon } from "./components/filters/filter_icon/filter_icon";
import { FilterIconsOverlay } from "./components/filters/filter_icons_overlay/filter_icons_overlay";
import { FilterMenu } from "./components/filters/filter_menu/filter_menu";
import { FilterMenuValueItem } from "./components/filters/filter_menu_item/filter_menu_value_item";
import { FontSizeEditor } from "./components/font_size_editor/font_size_editor";
import { Grid } from "./components/grid/grid";
import { GridAddRowsFooter } from "./components/grid_add_rows_footer/grid_add_rows_footer";
import { GridCellIcon } from "./components/grid_cell_icon/grid_cell_icon";
import { GridOverlay } from "./components/grid_overlay/grid_overlay";
import { GridPopover } from "./components/grid_popover/grid_popover";
import { ColGroup, RowGroup } from "./components/header_group/header_group";
import { HeaderGroupContainer } from "./components/header_group/header_group_container";
import {
  ColResizer,
  HeadersOverlay,
  RowResizer,
} from "./components/headers_overlay/headers_overlay";
import { useDragAndDropListItems } from "./components/helpers/drag_and_drop_hook";
import { Border } from "./components/highlight/border/border";
import { Corner } from "./components/highlight/corner/corner";
import { Highlight } from "./components/highlight/highlight/highlight";
import { IconPicker } from "./components/icon_picker/icon_picker";
import { Spreadsheet } from "./components/index";
import { LinkDisplay, LinkEditor } from "./components/link";
import { Menu } from "./components/menu/menu";
import { PaintFormatButton } from "./components/paint_format_button/paint_format_button";
import { Popover } from "./components/popover/popover";
import { ScrollBar } from "./components/scrollbar";
import { HorizontalScrollBar } from "./components/scrollbar/scrollbar_horizontal";
import { VerticalScrollBar } from "./components/scrollbar/scrollbar_vertical";
import { SelectionInput } from "./components/selection_input/selection_input";
import {
  BarChartDesignPanel,
  BarConfigPanel,
  GaugeChartConfigPanel,
  GaugeChartDesignPanel,
  LineBarPieConfigPanel,
  LineBarPieDesignPanel,
  LineChartDesignPanel,
  LineConfigPanel,
  ScorecardChartConfigPanel,
  ScorecardChartDesignPanel,
  chartSidePanelComponentRegistry,
} from "./components/side_panel/chart";
import { ChartPanel } from "./components/side_panel/chart/main_chart_panel/main_chart_panel";
import { ConditionalFormattingEditor } from "./components/side_panel/conditional_formatting/cf_editor/cf_editor";
import { ConditionalFormatPreviewList } from "./components/side_panel/conditional_formatting/cf_preview_list/cf_preview_list";
import { ConditionalFormattingPanel } from "./components/side_panel/conditional_formatting/conditional_formatting";
import { CustomCurrencyPanel } from "./components/side_panel/custom_currency/custom_currency";
import { DataValidationPanel } from "./components/side_panel/data_validation/data_validation_panel";
import { DataValidationDateCriterionForm } from "./components/side_panel/data_validation/dv_criterion_form/dv_date_criterion/dv_date_criterion";
import { DataValidationDoubleInputCriterionForm } from "./components/side_panel/data_validation/dv_criterion_form/dv_double_input_criterion/dv_double_input_criterion";
import { DataValidationInput } from "./components/side_panel/data_validation/dv_criterion_form/dv_input/dv_input";
import { DataValidationSingleInputCriterionForm } from "./components/side_panel/data_validation/dv_criterion_form/dv_single_input_criterion/dv_single_input_criterion";
import { DataValidationListCriterionForm } from "./components/side_panel/data_validation/dv_criterion_form/dv_value_in_list_criterion/dv_value_in_list_criterion";
import { DataValidationValueInRangeCriterionForm } from "./components/side_panel/data_validation/dv_criterion_form/dv_value_in_range_criterion/dv_value_in_range_criterion";
import { DataValidationEditor } from "./components/side_panel/data_validation/dv_editor/dv_editor";
import { DataValidationPreview } from "./components/side_panel/data_validation/dv_preview/dv_preview";
import { FindAndReplacePanel } from "./components/side_panel/find_and_replace/find_and_replace";
import { MoreFormatsPanel } from "./components/side_panel/more_formats/more_formats";
import { RemoveDuplicatesPanel } from "./components/side_panel/remove_duplicates/remove_duplicates";
import { SelectMenu } from "./components/side_panel/select_menu/select_menu";
import { SettingsPanel } from "./components/side_panel/settings/settings_panel";
import { SidePanel } from "./components/side_panel/side_panel/side_panel";
import { SplitIntoColumnsPanel } from "./components/side_panel/split_to_columns_panel/split_to_columns_panel";
import { TopBar } from "./components/top_bar/top_bar";
import { ValidationMessages } from "./components/validation_messages/validation_messages";
import {
  ACTIVE_BORDER_WIDTH,
  AUTOFILL_EDGE_LENGTH,
  BACKGROUND_CHART_COLOR,
  BACKGROUND_GRAY_COLOR,
  BACKGROUND_HEADER_ACTIVE_COLOR,
  BACKGROUND_HEADER_COLOR,
  BACKGROUND_HEADER_FILTER_COLOR,
  BACKGROUND_HEADER_SELECTED_COLOR,
  BACKGROUND_HEADER_SELECTED_FILTER_COLOR,
  BG_HOVER_COLOR,
  BOTTOMBAR_HEIGHT,
  CANVAS_SHIFT,
  CELL_BORDER_COLOR,
  CF_ICON_EDGE_LENGTH,
  COLOR_PICKER_DEFAULTS,
  COMPOSER_ASSISTANT_COLOR,
  ComponentsImportance,
  DEBOUNCE_TIME,
  DEFAULT_BORDER_DESC,
  DEFAULT_CELL_HEIGHT,
  DEFAULT_CELL_WIDTH,
  DEFAULT_COLOR_SCALE_MIDPOINT_COLOR,
  DEFAULT_ERROR_MESSAGE,
  DEFAULT_FIGURE_HEIGHT,
  DEFAULT_FIGURE_WIDTH,
  DEFAULT_FILTER_BORDER_DESC,
  DEFAULT_FONT,
  DEFAULT_FONT_SIZE,
  DEFAULT_FONT_WEIGHT,
  DEFAULT_GAUGE_LOWER_COLOR,
  DEFAULT_GAUGE_MIDDLE_COLOR,
  DEFAULT_GAUGE_UPPER_COLOR,
  DEFAULT_REVISION_ID,
  DEFAULT_SCORECARD_BASELINE_COLOR_DOWN,
  DEFAULT_SCORECARD_BASELINE_COLOR_UP,
  DEFAULT_SCORECARD_BASELINE_MODE,
  DEFAULT_STYLE,
  DEFAULT_VERTICAL_ALIGN,
  DEFAULT_WRAPPING_MODE,
  DISABLED_TEXT_COLOR,
  FIGURE_BORDER_COLOR,
  FIGURE_BORDER_WIDTH,
  FIGURE_ID_SPLITTER,
  FILTERS_COLOR,
  FILTER_ICON_EDGE_LENGTH,
  FILTER_ICON_MARGIN,
  FONT_SIZES,
  FOOTER_HEIGHT,
  FORBIDDEN_IN_EXCEL_REGEX,
  FORBIDDEN_SHEET_CHARS,
  FORMULA_REF_IDENTIFIER,
  FROZEN_PANE_BORDER_COLOR,
  FROZEN_PANE_HEADER_BORDER_COLOR,
  GRID_BORDER_COLOR,
  GRID_ICON_EDGE_LENGTH,
  GRID_ICON_MARGIN,
  GROUP_LAYER_WIDTH,
  HEADER_BORDER_COLOR,
  HEADER_FONT_SIZE,
  HEADER_GROUPING_BACKGROUND_COLOR,
  HEADER_GROUPING_BORDER_COLOR,
  HEADER_HEIGHT,
  HEADER_WIDTH,
  ICONS_COLOR,
  ICON_EDGE_LENGTH,
  INCORRECT_RANGE_STRING,
  LINE_FILL_TRANSPARENCY,
  LINK_COLOR,
  LOADING,
  MAXIMAL_FREEZABLE_RATIO,
  MAX_CHAR_LABEL,
  MAX_HISTORY_STEPS,
  MENU_ITEM_HEIGHT,
  MENU_ITEM_PADDING_HORIZONTAL,
  MENU_ITEM_PADDING_VERTICAL,
  MENU_SEPARATOR_BORDER_WIDTH,
  MENU_SEPARATOR_HEIGHT,
  MENU_SEPARATOR_PADDING,
  MENU_VERTICAL_PADDING,
  MENU_WIDTH,
  MESSAGE_VERSION,
  MIN_CELL_TEXT_MARGIN,
  MIN_CF_ICON_MARGIN,
  MIN_COL_WIDTH,
  MIN_FIG_SIZE,
  MIN_ROW_HEIGHT,
  NEWLINE,
  PADDING_AUTORESIZE_HORIZONTAL,
  PADDING_AUTORESIZE_VERTICAL,
  SCROLLBAR_WIDTH,
  SELECTION_BORDER_COLOR,
  SEPARATOR_COLOR,
  TEXT_HEADER_COLOR,
  TOPBAR_HEIGHT,
  TOPBAR_TOOLBAR_HEIGHT,
  UNHIDE_ICON_EDGE_LENGTH,
  getDefaultSheetViewSize,
  setDefaultSheetViewSize,
} from "./constants";
import { addMetaInfoFromArg, validateArguments } from "./functions/arguments";
import {
  assert,
  assertNumberGreaterThanOrEqualToOne,
  conditionalVisitBoolean,
  dichotomicSearch,
  expectNumberRangeError,
  expectStringSetError,
  flattenRowFirst,
  generateMatrix,
  linearSearch,
  matrixMap,
  normalizeRange,
  normalizeString,
  reduceAny,
  reduceNumbers,
  reduceNumbersTextAs0,
  strictToInteger,
  strictToNumber,
  toBoolean,
  toInteger,
  toJsDate,
  toMatrix,
  toNumber,
  toString,
  transposeMatrix,
  tryCastAsNumberMatrix,
  tryToNumber,
  visitAny,
  visitMatchingRanges,
  visitNumbers,
} from "./functions/helpers";
import { arg, functionRegistry } from "./functions/index";
import { createEvaluatedCell, errorCell, evaluateLiteral, parseLiteral } from "./helpers/cells";
import { getChartTimeOptions, timeFormatLuxonCompatible } from "./helpers/chart_date";
import { ClipboardCellsState } from "./helpers/clipboard/clipboard_cells_state";
import {
  ClipboardFigureChart,
  ClipboardFigureImage,
  ClipboardFigureState,
} from "./helpers/clipboard/clipboard_figure_state";
import { ClipboardOsState } from "./helpers/clipboard/clipboard_os_state";
import { instantiateClipboard } from "./helpers/clipboard/navigator_clipboard_wrapper";
import {
  BarChart,
  ChartColors,
  GaugeChart,
  LineChart,
  PieChart,
  adaptChartRange,
  aggregateDataForLabels,
  canChartParseLabels,
  chartFactory,
  chartFontColor,
  chartRuntimeFactory,
  chartToImage,
  checkDataset,
  checkLabelRange,
  copyDataSetsWithNewSheetId,
  copyLabelRangeWithNewSheetId,
  createBarChartRuntime,
  createDataSets,
  createGaugeChartRuntime,
  createLineChartRuntime,
  createPieChartRuntime,
  createScorecardChartRuntime,
  drawScoreChart,
  filterEmptyDataPoints,
  getBaselineArrowDirection,
  getBaselineColor,
  getBaselineText,
  getChartDatasetFormat,
  getChartDatasetValues,
  getChartDefinitionFromContextCreation,
  getChartLabelFormat,
  getChartLabelValues,
  getChartPositionAtCenterOfViewport,
  getChartTypes,
  getData,
  getDefaultChartJsRuntime,
  getFillingMode,
  getSmartChartDefinition,
  shouldRemoveFirstLabel,
  toExcelDataset,
  toExcelLabelRange,
  transformChartDefinitionWithDataSetsWithZone,
  transformDefinition,
  truncateLabel,
  updateChartRangesWithDataSets,
  validateChartDefinition,
} from "./helpers/figures/charts";
import {
  formatBaselineDescr,
  getScorecardConfiguration,
} from "./helpers/figures/charts/scorecard_chart_config_builder";
import { centerFigurePosition, getMaxFigureSize } from "./helpers/figures/figure/figure";
import { ImageProvider } from "./helpers/figures/images/image_provider";
import { Filter, FilterTable } from "./helpers/filters";
import {
  INITIAL_1900_DAY,
  JetSet,
  MAX_DELAY,
  MIN_DELAY,
  MS_PER_DAY,
  RangeImpl,
  UuidGenerator,
  addMonthsToDate,
  applyDateTimeFormat,
  areDatesSameDay,
  areTwoDatesWithinOneYear,
  areZonesContinuous,
  buildSheetLink,
  cellReference,
  changeDecimalPlaces,
  clip,
  colorNumberString,
  colorToRGBA,
  colors,
  computeIconWidth,
  computeTextFont,
  computeTextFontSizeInPixels,
  computeTextLinesHeight,
  computeTextWidth,
  concat,
  copyRangeWithNewSheetId,
  createAdaptedZone,
  createCurrencyFormat,
  createDefaultFormat,
  createDefaultRows,
  createLargeNumberFormat,
  createRange,
  debounce,
  deepCopy,
  deepEquals,
  detectDateFormat,
  detectNumberFormat,
  drawDecoratedText,
  escapeRegExp,
  expandZoneOnInsertion,
  findCellInNewZone,
  findNextDefinedValue,
  fontSizeInPixels,
  forEachPositionsInZone,
  formatValue,
  fuzzyLookup,
  fuzzyMatch,
  getAddHeaderStartIndex,
  getCanonicalSheetName,
  getCellPositionsInRanges,
  getContextFontSize,
  getCriterionValuesAsNumber,
  getDateNumberCriterionValues,
  getDaysInMonth,
  getDecimalNumberRegex,
  getDefaultCellHeight,
  getFontSizeMatchingWidth,
  getFormulaNumberRegex,
  getItemId,
  getTimeDifferenceInWholeDays,
  getTimeDifferenceInWholeMonths,
  getTimeDifferenceInWholeYears,
  getUnquotedSheetName,
  getYearFrac,
  getZoneArea,
  getZonesCols,
  getZonesRows,
  groupConsecutive,
  hexToHSLA,
  hslaToHex,
  hslaToRGBA,
  includesAll,
  insertItemsAtIndex,
  intersection,
  isBoolean,
  isColHeader,
  isColReference,
  isColorValid,
  isConsecutive,
  isDateAfter,
  isDateBefore,
  isDateBetween,
  isDateStrictlyAfter,
  isDateStrictlyBefore,
  isDateTime,
  isDateTimeFormat,
  isDefined,
  isEqual,
  isFullRow,
  isHSLAValid,
  isInside,
  isLastDayOfMonth,
  isMarkdownLink,
  isNotNull,
  isNumber,
  isNumberBetween,
  isObjectEmptyRecursive,
  isOneDimensional,
  isRowReference,
  isSameColor,
  isSheetUrl,
  isSingleCellReference,
  isWebLink,
  isXcValid,
  isZoneInside,
  isZoneValid,
  jsDateToNumber,
  jsDateToRoundNumber,
  lazy,
  lettersToNumber,
  markdownLink,
  mdyDateRegexp,
  memoize,
  mergeAlignedColumns,
  mergeOverlappingZones,
  mergePositionsIntoColumns,
  moveHeaderIndexesOnHeaderAddition,
  moveHeaderIndexesOnHeaderDeletion,
  moveItemToIndex,
  numberToJsDate,
  numberToLetters,
  numberToString,
  organizeZone,
  overlap,
  parseDateTime,
  parseMarkdownLink,
  parseNumber,
  parseSheetUrl,
  percentile,
  positionToZone,
  positions,
  range,
  rangeReference,
  recomputeZones,
  reduceZoneOnDeletion,
  relativeLuminance,
  removeFalsyAttributes,
  removeIndexesFromArray,
  removeStringQuotes,
  replaceSpecialSpaces,
  rgba,
  rgbaToHSLA,
  rgbaToHex,
  roundFormat,
  scrollDelay,
  splitReference,
  splitTextToWidth,
  spreadRange,
  stringify,
  timeRegexp,
  toCartesian,
  toHex,
  toLowerCase,
  toUnboundedZone,
  toXC,
  toZone,
  toZoneWithoutBoundaryChanges,
  trimContent,
  union,
  uniqueZones,
  updateSelectionOnDeletion,
  updateSelectionOnInsertion,
  valueToDateNumber,
  ymdDateRegexp,
  zoneToDimension,
  zoneToXc,
} from "./helpers/index";
import { InternalViewport } from "./helpers/internal_viewport";
import { inverseCommand } from "./helpers/inverse_commands";
import { detectLink, openLink, urlRegistry, urlRepresentation, withHttps } from "./helpers/links";
import {
  canonicalizeCFRule,
  canonicalizeContent,
  canonicalizeNumberContent,
  canonicalizeNumberLiteral,
  isValidLocale,
  localizeCFRule,
  localizeContent,
  localizeDataValidationRule,
  localizeFormula,
  localizeNumberContent,
} from "./helpers/locale";
import { rectIntersection, rectUnion } from "./helpers/rectangle";
import { loopThroughReferenceType } from "./helpers/reference_type";
import { interactiveSortSelection, sortCells } from "./helpers/sort";
import { createEmptyStructure } from "./helpers/state_manager_helpers";
import { interactiveCut } from "./helpers/ui/cut_interactive";
import { AddFilterInteractiveContent, interactiveAddFilter } from "./helpers/ui/filter_interactive";
import { interactiveFreezeColumnsRows } from "./helpers/ui/freeze_interactive";
import { AddMergeInteractiveContent, interactiveAddMerge } from "./helpers/ui/merge_interactive";
import {
  PasteInteractiveContent,
  handlePasteResult,
  interactivePaste,
  interactivePasteFromOS,
} from "./helpers/ui/paste_interactive";
import { interactiveRenameSheet } from "./helpers/ui/sheet_interactive";
import {
  SplitToColumnsInteractiveContent,
  interactiveSplitToColumns,
} from "./helpers/ui/split_to_columns_interactive";
import { interactiveStopEdition } from "./helpers/ui/stop_edition_interactive";
import {
  ToggleGroupInteractiveContent,
  interactiveToggleGroup,
} from "./helpers/ui/toggle_group_interactive";
import {
  CURRENT_VERSION,
  createEmptyExcelSheet,
  createEmptyExcelWorkbookData,
  createEmptySheet,
  createEmptyWorkbookData,
  load,
  repairData,
  repairInitialMessages,
} from "./migrations/data";
import {
  corePluginRegistry,
  coreViewsPluginRegistry,
  featurePluginRegistry,
  statefulUIPluginRegistry,
} from "./plugins/index";
import { clickableCellRegistry } from "./registries/cell_clickable_registry";
import {
  autofillModifiersRegistry,
  autofillRulesRegistry,
  cellMenuRegistry,
  cellPopoverRegistry,
  chartComponentRegistry,
  chartRegistry,
  colMenuRegistry,
  figureRegistry,
  inverseCommandRegistry,
  linkMenuRegistry,
  numberFormatMenuRegistry,
  otRegistry,
  rowMenuRegistry,
  sidePanelRegistry,
  topbarComponentRegistry,
  topbarMenuRegistry,
} from "./registries/index";
import {
  genericRepeat,
  repeatCommandTransformRegistry,
  repeatCoreCommand,
  repeatLocalCommand,
  repeatLocalCommandChildren,
  repeatLocalCommandTransformRegistry,
} from "./registries/repeat_commands_registry";
import { AddFunctionDescription } from "./types";
import {
  BadExpressionError,
  CellErrorLevel,
  CellErrorType,
  CircularDependencyError,
  EvaluationError,
  InvalidReferenceError,
  NotAvailableError,
  UnknownFunctionError,
} from "./types/errors";

/**
 * We export here all entities that needs to be accessed publicly by Odoo.
 *
 * Note that the __info__ key is actually completed by the build process (see
 * the rollup.config.js file)
 */

export const __info__ = {};
export { Revision } from "./collaborative/revisions";
export { Spreadsheet } from "./components/index";
export { setDefaultSheetViewSize } from "./constants";
export { compile, functionCache } from "./formulas/compiler";
export { astToFormula, convertAstNodes, iterateAstNodes, parse } from "./formulas/parser";
export { tokenize } from "./formulas/tokenizer";
export { AbstractChart } from "./helpers/figures/charts";
export { findCellInNewZone } from "./helpers/zones";
export { load } from "./migrations/data";
export { Model } from "./model";
export { CorePlugin } from "./plugins/core_plugin";
export { UIPlugin } from "./plugins/ui_plugin";
export { Registry } from "./registries/registry";
export { setTranslationMethod } from "./translation";
export { CancelledReason, CommandResult, DispatchResult } from "./types";
export { Client } from "./types/collaborative/session";
export {
  ClientJoinedMessage,
  ClientLeftMessage,
  ClientMovedMessage,
  CollaborationMessage,
  RemoteRevisionMessage,
  RevisionRedoneMessage,
  RevisionUndoneMessage,
  TransportService,
} from "./types/collaborative/transport_service";
export {
  coreTypes,
  invalidateCFEvaluationCommands,
  invalidateDependenciesCommands,
  invalidateEvaluationCommands,
  readonlyAllowedCommands,
} from "./types/commands";
export { EvaluationError } from "./types/errors";
export const SPREADSHEET_DIMENSIONS = {
  MIN_ROW_HEIGHT,
  MIN_COL_WIDTH,
  HEADER_HEIGHT,
  HEADER_WIDTH,
  TOPBAR_HEIGHT,
  BOTTOMBAR_HEIGHT,
  DEFAULT_CELL_WIDTH,
  DEFAULT_CELL_HEIGHT,
  SCROLLBAR_WIDTH,
};

export const registries = {
  autofillModifiersRegistry,
  autofillRulesRegistry,
  cellMenuRegistry,
  colMenuRegistry,
  linkMenuRegistry,
  functionRegistry,
  featurePluginRegistry,
  statefulUIPluginRegistry,
  coreViewsPluginRegistry,
  corePluginRegistry,
  rowMenuRegistry,
  sidePanelRegistry,
  figureRegistry,
  chartSidePanelComponentRegistry,
  chartComponentRegistry,
  chartRegistry,
  topbarMenuRegistry,
  topbarComponentRegistry,
  clickableCellRegistry,
  otRegistry,
  inverseCommandRegistry,
  urlRegistry,
  cellPopoverRegistry,
  numberFormatMenuRegistry,
  repeatLocalCommandTransformRegistry,
  repeatCommandTransformRegistry,
};
export const helpers = {
  AddFilterInteractiveContent,
  AddMergeInteractiveContent,
  BadExpressionError,
  BarChart,
  CURRENT_VERSION,
  CellErrorLevel,
  CellErrorType,
  ChartColors,
  CircularDependencyError,
  ClipboardCellsState,
  ClipboardFigureChart,
  ClipboardFigureImage,
  ClipboardFigureState,
  ClipboardOsState,
  EvaluationError,
  EventBus,
  Filter,
  FilterTable,
  GaugeChart,
  INITIAL_1900_DAY,
  ImageProvider,
  InternalViewport,
  InvalidReferenceError,
  JetSet,
  LineChart,
  MAX_DELAY,
  MIN_DELAY,
  MS_PER_DAY,
  NotAvailableError,
  PasteInteractiveContent,
  PieChart,
  RangeImpl,
  ScorecardChart,
  SplitToColumnsInteractiveContent,
  ToggleGroupInteractiveContent,
  UnknownFunctionError,
  UuidGenerator,
  adaptChartRange,
  addMetaInfoFromArg,
  addMonthsToDate,
  aggregateDataForLabels,
  applyDateTimeFormat,
  areDatesSameDay,
  areTwoDatesWithinOneYear,
  areZonesContinuous,
  arg,
  assert,
  assertNumberGreaterThanOrEqualToOne,
  buildSheetLink,
  canChartParseLabels,
  canonicalizeCFRule,
  canonicalizeContent,
  canonicalizeNumberContent,
  canonicalizeNumberLiteral,
  cellReference,
  centerFigurePosition,
  changeDecimalPlaces,
  chartFactory,
  chartFontColor,
  chartRuntimeFactory,
  chartToImage,
  checkDataset,
  checkLabelRange,
  clip,
  colorNumberString,
  colorToRGBA,
  colors,
  computeIconWidth,
  computeTextFont,
  computeTextFontSizeInPixels,
  computeTextLinesHeight,
  computeTextWidth,
  concat,
  conditionalVisitBoolean,
  copyDataSetsWithNewSheetId,
  copyLabelRangeWithNewSheetId,
  copyRangeWithNewSheetId,
  createAction,
  createActions,
  createAdaptedZone,
  createBarChartRuntime,
  createCurrencyFormat,
  createDataSets,
  createDefaultFormat,
  createDefaultRows,
  createEmptyExcelSheet,
  createEmptyExcelWorkbookData,
  createEmptySheet,
  createEmptyStructure,
  createEmptyWorkbookData,
  createEvaluatedCell,
  createGaugeChartRuntime,
  createLargeNumberFormat,
  createLineChartRuntime,
  createPieChartRuntime,
  createRange,
  createScorecardChartRuntime,
  debounce,
  deepCopy,
  deepEquals,
  detectDateFormat,
  detectLink,
  detectNumberFormat,
  dichotomicSearch,
  drawDecoratedText,
  drawScoreChart,
  errorCell,
  escapeRegExp,
  evaluateLiteral,
  expandZoneOnInsertion,
  expectNumberRangeError,
  expectStringSetError,
  filterEmptyDataPoints,
  findCellInNewZone,
  findNextDefinedValue,
  flattenRowFirst,
  fontSizeInPixels,
  forEachPositionsInZone,
  formatBaselineDescr,
  formatValue,
  fuzzyLookup,
  fuzzyMatch,
  generateMatrix,
  genericRepeat,
  getAddHeaderStartIndex,
  getBaselineArrowDirection,
  getBaselineColor,
  getBaselineText,
  getCanonicalSheetName,
  getCellPositionsInRanges,
  getChartDatasetFormat,
  getChartDatasetValues,
  getChartDefinitionFromContextCreation,
  getChartLabelFormat,
  getChartLabelValues,
  getChartPositionAtCenterOfViewport,
  getChartTimeOptions,
  getChartTypes,
  getContextFontSize,
  getCriterionValuesAsNumber,
  getData,
  getDateNumberCriterionValues,
  getDaysInMonth,
  getDecimalNumberRegex,
  getDefaultCellHeight,
  getDefaultChartJsRuntime,
  getFillingMode,
  getFontSizeMatchingWidth,
  getFormulaNumberRegex,
  getItemId,
  getMaxFigureSize,
  getScorecardConfiguration,
  getSmartChartDefinition,
  getTimeDifferenceInWholeDays,
  getTimeDifferenceInWholeMonths,
  getTimeDifferenceInWholeYears,
  getUnquotedSheetName,
  getYearFrac,
  getZoneArea,
  getZonesCols,
  getZonesRows,
  groupConsecutive,
  handlePasteResult,
  hexToHSLA,
  hslaToHex,
  hslaToRGBA,
  includesAll,
  insertItemsAtIndex,
  instantiateClipboard,
  interactiveAddFilter,
  interactiveAddMerge,
  interactiveCut,
  interactiveFreezeColumnsRows,
  interactivePaste,
  interactivePasteFromOS,
  interactiveRenameSheet,
  interactiveSortSelection,
  interactiveSplitToColumns,
  interactiveStopEdition,
  interactiveToggleGroup,
  intersection,
  inverseCommand,
  isBoolean,
  isColHeader,
  isColReference,
  isColorValid,
  isConsecutive,
  isDateAfter,
  isDateBefore,
  isDateBetween,
  isDateStrictlyAfter,
  isDateStrictlyBefore,
  isDateTime,
  isDateTimeFormat,
  isDefined,
  isEqual,
  isFullRow,
  isHSLAValid,
  isInside,
  isLastDayOfMonth,
  isMarkdownLink,
  isNotNull,
  isNumber,
  isNumberBetween,
  isObjectEmptyRecursive,
  isOneDimensional,
  isRowReference,
  isSameColor,
  isSheetUrl,
  isSingleCellReference,
  isValidLocale,
  isWebLink,
  isXcValid,
  isZoneInside,
  isZoneValid,
  jsDateToNumber,
  jsDateToRoundNumber,
  lazy,
  lettersToNumber,
  linearSearch,
  load,
  localizeCFRule,
  localizeContent,
  localizeDataValidationRule,
  localizeFormula,
  localizeNumberContent,
  loopThroughReferenceType,
  markdownLink,
  matrixMap,
  mdyDateRegexp,
  memoize,
  mergeAlignedColumns,
  mergeOverlappingZones,
  mergePositionsIntoColumns,
  moveHeaderIndexesOnHeaderAddition,
  moveHeaderIndexesOnHeaderDeletion,
  moveItemToIndex,
  normalizeRange,
  normalizeString,
  numberToJsDate,
  numberToLetters,
  numberToString,
  openLink,
  organizeZone,
  overlap,
  parseDateTime,
  parseLiteral,
  parseMarkdownLink,
  parseNumber,
  parseSheetUrl,
  percentile,
  positionToZone,
  positions,
  range,
  rangeReference,
  recomputeZones,
  rectIntersection,
  rectUnion,
  reduceAny,
  reduceNumbers,
  reduceNumbersTextAs0,
  reduceZoneOnDeletion,
  relativeLuminance,
  removeFalsyAttributes,
  removeIndexesFromArray,
  removeStringQuotes,
  repairData,
  repairInitialMessages,
  repeatCoreCommand,
  repeatLocalCommand,
  repeatLocalCommandChildren,
  replaceSpecialSpaces,
  rgba,
  rgbaToHSLA,
  rgbaToHex,
  roundFormat,
  scrollDelay,
  shouldRemoveFirstLabel,
  sortCells,
  splitReference,
  splitTextToWidth,
  spreadRange,
  strictToInteger,
  strictToNumber,
  stringify,
  timeFormatLuxonCompatible,
  timeRegexp,
  toBoolean,
  toCartesian,
  toExcelDataset,
  toExcelLabelRange,
  toHex,
  toInteger,
  toJsDate,
  toLowerCase,
  toMatrix,
  toNumber,
  toString,
  toUnboundedZone,
  toXC,
  toZone,
  toZoneWithoutBoundaryChanges,
  transformChartDefinitionWithDataSetsWithZone,
  transformDefinition,
  transformRangeData,
  transformZone,
  transposeMatrix,
  trimContent,
  truncateLabel,
  tryCastAsNumberMatrix,
  tryToNumber,
  union,
  uniqueZones,
  updateChartRangesWithDataSets,
  updateSelectionOnDeletion,
  updateSelectionOnInsertion,
  urlRepresentation,
  validateArguments,
  validateChartDefinition,
  valueToDateNumber,
  visitAny,
  visitMatchingRanges,
  visitNumbers,
  withHttps,
  ymdDateRegexp,
  zoneToDimension,
  zoneToXc,
};

export const links = {
  isMarkdownLink,
  parseMarkdownLink,
  markdownLink,
  openLink,
  urlRepresentation,
};
export const components = {
  ActionButton,
  Autofill,
  BarChartDesignPanel,
  BarConfigPanel,
  Border,
  BorderEditor,
  BorderEditorWidget,
  BottomBar,
  BottomBarSheet,
  BottomBarStatistic,
  ChartFigure,
  ChartJsComponent,
  ChartPanel,
  ClientTag,
  ColGroup,
  ColResizer,
  ColorPicker,
  ColorPickerWidget,
  Composer,
  ConditionalFormatPreviewList,
  ConditionalFormattingEditor,
  ConditionalFormattingPanel,
  ContentEditableHelper,
  Corner,
  CustomCurrencyPanel,
  DataValidationCheckbox,
  DataValidationDateCriterionForm,
  DataValidationDoubleInputCriterionForm,
  DataValidationEditor,
  DataValidationInput,
  DataValidationListCriterionForm,
  DataValidationListIcon,
  DataValidationOverlay,
  DataValidationPanel,
  DataValidationPreview,
  DataValidationSingleInputCriterionForm,
  DataValidationValueInRangeCriterionForm,
  ErrorToolTip,
  FigureComponent,
  FiguresContainer,
  FilterIcon,
  FilterIconsOverlay,
  FilterMenu,
  FilterMenuValueItem,
  FindAndReplacePanel,
  FontSizeEditor,
  FunctionDescriptionProvider,
  GaugeChartConfigPanel,
  GaugeChartDesignPanel,
  Grid,
  GridAddRowsFooter,
  GridCellIcon,
  GridComposer,
  GridOverlay,
  GridPopover,
  HeaderGroupContainer,
  HeadersOverlay,
  Highlight,
  HorizontalScrollBar,
  IconPicker,
  ImageFigure,
  LineBarPieConfigPanel,
  LineBarPieDesignPanel,
  LineChartDesignPanel,
  LineConfigPanel,
  LinkDisplay,
  LinkEditor,
  Menu,
  MoreFormatsPanel,
  PaintFormatButton,
  Popover,
  RemoveDuplicatesPanel,
  Ripple,
  RowGroup,
  RowResizer,
  ScorecardChart,
  ScorecardChartConfigPanel,
  ScorecardChartDesignPanel,
  ScrollBar,
  SelectMenu,
  SelectionInput,
  SettingsPanel,
  SidePanel,
  SplitIntoColumnsPanel,
  Spreadsheet,
  SpreadsheetDashboard,
  TextValueProvider,
  TopBar,
  TopBarComposer,
  ValidationMessages,
  VerticalScrollBar,
};

export const hooks = {
  useDragAndDropListItems,
};

export function addFunction(functionName: string, functionDescription: AddFunctionDescription) {
  functionRegistry.add(functionName, functionDescription);
  return {
    addFunction: (fName: string, fDescription: AddFunctionDescription) =>
      addFunction(fName, fDescription),
  };
}

export const constants = {
  ACTIVE_BORDER_WIDTH,
  AUTOFILL_EDGE_LENGTH,
  BACKGROUND_CHART_COLOR,
  BACKGROUND_GRAY_COLOR,
  BACKGROUND_HEADER_ACTIVE_COLOR,
  BACKGROUND_HEADER_COLOR,
  BACKGROUND_HEADER_FILTER_COLOR,
  BACKGROUND_HEADER_SELECTED_COLOR,
  BACKGROUND_HEADER_SELECTED_FILTER_COLOR,
  BG_HOVER_COLOR,
  BOTTOMBAR_HEIGHT,
  CANVAS_SHIFT,
  CELL_BORDER_COLOR,
  CF_ICON_EDGE_LENGTH,
  COLOR_PICKER_DEFAULTS,
  COMPOSER_ASSISTANT_COLOR,
  ComponentsImportance,
  DEBOUNCE_TIME,
  DEFAULT_BORDER_DESC,
  DEFAULT_CELL_HEIGHT,
  DEFAULT_CELL_WIDTH,
  DEFAULT_COLOR_SCALE_MIDPOINT_COLOR,
  DEFAULT_ERROR_MESSAGE,
  DEFAULT_FIGURE_HEIGHT,
  DEFAULT_FIGURE_WIDTH,
  DEFAULT_FILTER_BORDER_DESC,
  DEFAULT_FONT,
  DEFAULT_FONT_SIZE,
  DEFAULT_FONT_WEIGHT,
  DEFAULT_GAUGE_LOWER_COLOR,
  DEFAULT_GAUGE_MIDDLE_COLOR,
  DEFAULT_GAUGE_UPPER_COLOR,
  DEFAULT_REVISION_ID,
  DEFAULT_SCORECARD_BASELINE_COLOR_DOWN,
  DEFAULT_SCORECARD_BASELINE_COLOR_UP,
  DEFAULT_SCORECARD_BASELINE_MODE,
  DEFAULT_STYLE,
  DEFAULT_VERTICAL_ALIGN,
  DEFAULT_WRAPPING_MODE,
  DISABLED_TEXT_COLOR,
  FIGURE_BORDER_COLOR,
  FIGURE_BORDER_WIDTH,
  FIGURE_ID_SPLITTER,
  FILTERS_COLOR,
  FILTER_ICON_EDGE_LENGTH,
  FILTER_ICON_MARGIN,
  FONT_SIZES,
  FOOTER_HEIGHT,
  FORBIDDEN_IN_EXCEL_REGEX,
  FORBIDDEN_SHEET_CHARS,
  FORMULA_REF_IDENTIFIER,
  FROZEN_PANE_BORDER_COLOR,
  FROZEN_PANE_HEADER_BORDER_COLOR,
  GRID_BORDER_COLOR,
  GRID_ICON_EDGE_LENGTH,
  GRID_ICON_MARGIN,
  GROUP_LAYER_WIDTH,
  HEADER_BORDER_COLOR,
  HEADER_FONT_SIZE,
  HEADER_GROUPING_BACKGROUND_COLOR,
  HEADER_GROUPING_BORDER_COLOR,
  HEADER_HEIGHT,
  HEADER_WIDTH,
  ICONS_COLOR,
  ICON_EDGE_LENGTH,
  INCORRECT_RANGE_STRING,
  LINE_FILL_TRANSPARENCY,
  LINK_COLOR,
  LOADING,
  MAXIMAL_FREEZABLE_RATIO,
  MAX_CHAR_LABEL,
  MAX_HISTORY_STEPS,
  MENU_ITEM_HEIGHT,
  MENU_ITEM_PADDING_HORIZONTAL,
  MENU_ITEM_PADDING_VERTICAL,
  MENU_SEPARATOR_BORDER_WIDTH,
  MENU_SEPARATOR_HEIGHT,
  MENU_SEPARATOR_PADDING,
  MENU_VERTICAL_PADDING,
  MENU_WIDTH,
  MESSAGE_VERSION,
  MIN_CELL_TEXT_MARGIN,
  MIN_CF_ICON_MARGIN,
  MIN_COL_WIDTH,
  MIN_FIG_SIZE,
  MIN_ROW_HEIGHT,
  NEWLINE,
  PADDING_AUTORESIZE_HORIZONTAL,
  PADDING_AUTORESIZE_VERTICAL,
  SCROLLBAR_WIDTH,
  SELECTION_BORDER_COLOR,
  SEPARATOR_COLOR,
  TEXT_HEADER_COLOR,
  TOPBAR_HEIGHT,
  TOPBAR_TOOLBAR_HEIGHT,
  UNHIDE_ICON_EDGE_LENGTH,
  getDefaultSheetViewSize,
  setDefaultSheetViewSize,
};
